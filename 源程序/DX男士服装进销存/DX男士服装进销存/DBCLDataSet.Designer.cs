//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DX男士服装进销存 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DBCLDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DBCLDataSet : global::System.Data.DataSet {
        
        private Table_GoodsBackDataTable tableTable_GoodsBack;
        
        private Table_GoodsInDataTable tableTable_GoodsIn;
        
        private Table_GoodsSellDataTable tableTable_GoodsSell;
        
        private Table_StorDataTable tableTable_Stor;
        
        private Table_SupplierDataTable tableTable_Supplier;
        
        private Table_UserMessageDataTable tableTable_UserMessage;
        
        private Table_VIPMessageDataTable tableTable_VIPMessage;
        
        private global::System.Data.DataRelation relationFK_Table_GoodsIn_Table_UserMessage;
        
        private global::System.Data.DataRelation relationFK_Table_GoodsSell_Table_UserMessage;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DBCLDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DBCLDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table_GoodsBack"] != null)) {
                    base.Tables.Add(new Table_GoodsBackDataTable(ds.Tables["Table_GoodsBack"]));
                }
                if ((ds.Tables["Table_GoodsIn"] != null)) {
                    base.Tables.Add(new Table_GoodsInDataTable(ds.Tables["Table_GoodsIn"]));
                }
                if ((ds.Tables["Table_GoodsSell"] != null)) {
                    base.Tables.Add(new Table_GoodsSellDataTable(ds.Tables["Table_GoodsSell"]));
                }
                if ((ds.Tables["Table_Stor"] != null)) {
                    base.Tables.Add(new Table_StorDataTable(ds.Tables["Table_Stor"]));
                }
                if ((ds.Tables["Table_Supplier"] != null)) {
                    base.Tables.Add(new Table_SupplierDataTable(ds.Tables["Table_Supplier"]));
                }
                if ((ds.Tables["Table_UserMessage"] != null)) {
                    base.Tables.Add(new Table_UserMessageDataTable(ds.Tables["Table_UserMessage"]));
                }
                if ((ds.Tables["Table_VIPMessage"] != null)) {
                    base.Tables.Add(new Table_VIPMessageDataTable(ds.Tables["Table_VIPMessage"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_GoodsBackDataTable Table_GoodsBack {
            get {
                return this.tableTable_GoodsBack;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_GoodsInDataTable Table_GoodsIn {
            get {
                return this.tableTable_GoodsIn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_GoodsSellDataTable Table_GoodsSell {
            get {
                return this.tableTable_GoodsSell;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_StorDataTable Table_Stor {
            get {
                return this.tableTable_Stor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_SupplierDataTable Table_Supplier {
            get {
                return this.tableTable_Supplier;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_UserMessageDataTable Table_UserMessage {
            get {
                return this.tableTable_UserMessage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_VIPMessageDataTable Table_VIPMessage {
            get {
                return this.tableTable_VIPMessage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DBCLDataSet cln = ((DBCLDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table_GoodsBack"] != null)) {
                    base.Tables.Add(new Table_GoodsBackDataTable(ds.Tables["Table_GoodsBack"]));
                }
                if ((ds.Tables["Table_GoodsIn"] != null)) {
                    base.Tables.Add(new Table_GoodsInDataTable(ds.Tables["Table_GoodsIn"]));
                }
                if ((ds.Tables["Table_GoodsSell"] != null)) {
                    base.Tables.Add(new Table_GoodsSellDataTable(ds.Tables["Table_GoodsSell"]));
                }
                if ((ds.Tables["Table_Stor"] != null)) {
                    base.Tables.Add(new Table_StorDataTable(ds.Tables["Table_Stor"]));
                }
                if ((ds.Tables["Table_Supplier"] != null)) {
                    base.Tables.Add(new Table_SupplierDataTable(ds.Tables["Table_Supplier"]));
                }
                if ((ds.Tables["Table_UserMessage"] != null)) {
                    base.Tables.Add(new Table_UserMessageDataTable(ds.Tables["Table_UserMessage"]));
                }
                if ((ds.Tables["Table_VIPMessage"] != null)) {
                    base.Tables.Add(new Table_VIPMessageDataTable(ds.Tables["Table_VIPMessage"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTable_GoodsBack = ((Table_GoodsBackDataTable)(base.Tables["Table_GoodsBack"]));
            if ((initTable == true)) {
                if ((this.tableTable_GoodsBack != null)) {
                    this.tableTable_GoodsBack.InitVars();
                }
            }
            this.tableTable_GoodsIn = ((Table_GoodsInDataTable)(base.Tables["Table_GoodsIn"]));
            if ((initTable == true)) {
                if ((this.tableTable_GoodsIn != null)) {
                    this.tableTable_GoodsIn.InitVars();
                }
            }
            this.tableTable_GoodsSell = ((Table_GoodsSellDataTable)(base.Tables["Table_GoodsSell"]));
            if ((initTable == true)) {
                if ((this.tableTable_GoodsSell != null)) {
                    this.tableTable_GoodsSell.InitVars();
                }
            }
            this.tableTable_Stor = ((Table_StorDataTable)(base.Tables["Table_Stor"]));
            if ((initTable == true)) {
                if ((this.tableTable_Stor != null)) {
                    this.tableTable_Stor.InitVars();
                }
            }
            this.tableTable_Supplier = ((Table_SupplierDataTable)(base.Tables["Table_Supplier"]));
            if ((initTable == true)) {
                if ((this.tableTable_Supplier != null)) {
                    this.tableTable_Supplier.InitVars();
                }
            }
            this.tableTable_UserMessage = ((Table_UserMessageDataTable)(base.Tables["Table_UserMessage"]));
            if ((initTable == true)) {
                if ((this.tableTable_UserMessage != null)) {
                    this.tableTable_UserMessage.InitVars();
                }
            }
            this.tableTable_VIPMessage = ((Table_VIPMessageDataTable)(base.Tables["Table_VIPMessage"]));
            if ((initTable == true)) {
                if ((this.tableTable_VIPMessage != null)) {
                    this.tableTable_VIPMessage.InitVars();
                }
            }
            this.relationFK_Table_GoodsIn_Table_UserMessage = this.Relations["FK_Table_GoodsIn_Table_UserMessage"];
            this.relationFK_Table_GoodsSell_Table_UserMessage = this.Relations["FK_Table_GoodsSell_Table_UserMessage"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DBCLDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DBCLDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTable_GoodsBack = new Table_GoodsBackDataTable();
            base.Tables.Add(this.tableTable_GoodsBack);
            this.tableTable_GoodsIn = new Table_GoodsInDataTable();
            base.Tables.Add(this.tableTable_GoodsIn);
            this.tableTable_GoodsSell = new Table_GoodsSellDataTable();
            base.Tables.Add(this.tableTable_GoodsSell);
            this.tableTable_Stor = new Table_StorDataTable();
            base.Tables.Add(this.tableTable_Stor);
            this.tableTable_Supplier = new Table_SupplierDataTable();
            base.Tables.Add(this.tableTable_Supplier);
            this.tableTable_UserMessage = new Table_UserMessageDataTable();
            base.Tables.Add(this.tableTable_UserMessage);
            this.tableTable_VIPMessage = new Table_VIPMessageDataTable();
            base.Tables.Add(this.tableTable_VIPMessage);
            this.relationFK_Table_GoodsIn_Table_UserMessage = new global::System.Data.DataRelation("FK_Table_GoodsIn_Table_UserMessage", new global::System.Data.DataColumn[] {
                        this.tableTable_UserMessage.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTable_GoodsIn.IDColumn}, false);
            this.Relations.Add(this.relationFK_Table_GoodsIn_Table_UserMessage);
            this.relationFK_Table_GoodsSell_Table_UserMessage = new global::System.Data.DataRelation("FK_Table_GoodsSell_Table_UserMessage", new global::System.Data.DataColumn[] {
                        this.tableTable_UserMessage.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTable_GoodsSell.IDColumn}, false);
            this.Relations.Add(this.relationFK_Table_GoodsSell_Table_UserMessage);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_GoodsBack() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_GoodsIn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_GoodsSell() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_Stor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_Supplier() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_UserMessage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable_VIPMessage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DBCLDataSet ds = new DBCLDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_GoodsBackRowChangeEventHandler(object sender, Table_GoodsBackRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_GoodsInRowChangeEventHandler(object sender, Table_GoodsInRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_GoodsSellRowChangeEventHandler(object sender, Table_GoodsSellRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_StorRowChangeEventHandler(object sender, Table_StorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_SupplierRowChangeEventHandler(object sender, Table_SupplierRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_UserMessageRowChangeEventHandler(object sender, Table_UserMessageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table_VIPMessageRowChangeEventHandler(object sender, Table_VIPMessageRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_GoodsBackDataTable : global::System.Data.TypedTableBase<Table_GoodsBackRow> {
            
            private global::System.Data.DataColumn columnThGoodsID;
            
            private global::System.Data.DataColumn columnKcID;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnSellID;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnThGoodsName;
            
            private global::System.Data.DataColumn columnThGoodsNumber;
            
            private global::System.Data.DataColumn columnThGoodsTime;
            
            private global::System.Data.DataColumn columnThGoodsPrice;
            
            private global::System.Data.DataColumn columnThRealPay;
            
            private global::System.Data.DataColumn columnThHasPay;
            
            private global::System.Data.DataColumn columnThRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackDataTable() {
                this.TableName = "Table_GoodsBack";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_GoodsBackDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_GoodsBackDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThGoodsIDColumn {
                get {
                    return this.columnThGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcIDColumn {
                get {
                    return this.columnKcID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellIDColumn {
                get {
                    return this.columnSellID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThGoodsNameColumn {
                get {
                    return this.columnThGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThGoodsNumberColumn {
                get {
                    return this.columnThGoodsNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThGoodsTimeColumn {
                get {
                    return this.columnThGoodsTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThGoodsPriceColumn {
                get {
                    return this.columnThGoodsPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThRealPayColumn {
                get {
                    return this.columnThRealPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThHasPayColumn {
                get {
                    return this.columnThHasPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThRemarkColumn {
                get {
                    return this.columnThRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackRow this[int index] {
                get {
                    return ((Table_GoodsBackRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsBackRowChangeEventHandler Table_GoodsBackRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsBackRowChangeEventHandler Table_GoodsBackRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsBackRowChangeEventHandler Table_GoodsBackRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsBackRowChangeEventHandler Table_GoodsBackRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_GoodsBackRow(Table_GoodsBackRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackRow AddTable_GoodsBackRow(string ThGoodsID, string KcID, string GoodsID, string SellID, string ID, string ThGoodsName, int ThGoodsNumber, System.DateTime ThGoodsTime, decimal ThGoodsPrice, decimal ThRealPay, decimal ThHasPay, string ThRemark) {
                Table_GoodsBackRow rowTable_GoodsBackRow = ((Table_GoodsBackRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ThGoodsID,
                        KcID,
                        GoodsID,
                        SellID,
                        ID,
                        ThGoodsName,
                        ThGoodsNumber,
                        ThGoodsTime,
                        ThGoodsPrice,
                        ThRealPay,
                        ThHasPay,
                        ThRemark};
                rowTable_GoodsBackRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_GoodsBackRow);
                return rowTable_GoodsBackRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackRow FindByThGoodsIDGoodsIDSellID(string ThGoodsID, string GoodsID, string SellID) {
                return ((Table_GoodsBackRow)(this.Rows.Find(new object[] {
                            ThGoodsID,
                            GoodsID,
                            SellID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_GoodsBackDataTable cln = ((Table_GoodsBackDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_GoodsBackDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnThGoodsID = base.Columns["ThGoodsID"];
                this.columnKcID = base.Columns["KcID"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnSellID = base.Columns["SellID"];
                this.columnID = base.Columns["ID"];
                this.columnThGoodsName = base.Columns["ThGoodsName"];
                this.columnThGoodsNumber = base.Columns["ThGoodsNumber"];
                this.columnThGoodsTime = base.Columns["ThGoodsTime"];
                this.columnThGoodsPrice = base.Columns["ThGoodsPrice"];
                this.columnThRealPay = base.Columns["ThRealPay"];
                this.columnThHasPay = base.Columns["ThHasPay"];
                this.columnThRemark = base.Columns["ThRemark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnThGoodsID = new global::System.Data.DataColumn("ThGoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThGoodsID);
                this.columnKcID = new global::System.Data.DataColumn("KcID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcID);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnSellID = new global::System.Data.DataColumn("SellID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellID);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnThGoodsName = new global::System.Data.DataColumn("ThGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThGoodsName);
                this.columnThGoodsNumber = new global::System.Data.DataColumn("ThGoodsNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThGoodsNumber);
                this.columnThGoodsTime = new global::System.Data.DataColumn("ThGoodsTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThGoodsTime);
                this.columnThGoodsPrice = new global::System.Data.DataColumn("ThGoodsPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThGoodsPrice);
                this.columnThRealPay = new global::System.Data.DataColumn("ThRealPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThRealPay);
                this.columnThHasPay = new global::System.Data.DataColumn("ThHasPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThHasPay);
                this.columnThRemark = new global::System.Data.DataColumn("ThRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnThGoodsID,
                                this.columnGoodsID,
                                this.columnSellID}, true));
                this.columnThGoodsID.AllowDBNull = false;
                this.columnThGoodsID.MaxLength = 50;
                this.columnKcID.AllowDBNull = false;
                this.columnKcID.MaxLength = 50;
                this.columnGoodsID.AllowDBNull = false;
                this.columnGoodsID.MaxLength = 50;
                this.columnSellID.AllowDBNull = false;
                this.columnSellID.MaxLength = 50;
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 50;
                this.columnThGoodsName.AllowDBNull = false;
                this.columnThGoodsName.MaxLength = 50;
                this.columnThGoodsNumber.AllowDBNull = false;
                this.columnThGoodsTime.AllowDBNull = false;
                this.columnThGoodsPrice.AllowDBNull = false;
                this.columnThRealPay.AllowDBNull = false;
                this.columnThHasPay.AllowDBNull = false;
                this.columnThRemark.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackRow NewTable_GoodsBackRow() {
                return ((Table_GoodsBackRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_GoodsBackRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_GoodsBackRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_GoodsBackRowChanged != null)) {
                    this.Table_GoodsBackRowChanged(this, new Table_GoodsBackRowChangeEvent(((Table_GoodsBackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_GoodsBackRowChanging != null)) {
                    this.Table_GoodsBackRowChanging(this, new Table_GoodsBackRowChangeEvent(((Table_GoodsBackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_GoodsBackRowDeleted != null)) {
                    this.Table_GoodsBackRowDeleted(this, new Table_GoodsBackRowChangeEvent(((Table_GoodsBackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_GoodsBackRowDeleting != null)) {
                    this.Table_GoodsBackRowDeleting(this, new Table_GoodsBackRowChangeEvent(((Table_GoodsBackRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_GoodsBackRow(Table_GoodsBackRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_GoodsBackDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_GoodsInDataTable : global::System.Data.TypedTableBase<Table_GoodsInRow> {
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnStroName;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNum;
            
            private global::System.Data.DataColumn columnGoodsUnit;
            
            private global::System.Data.DataColumn columnGoodsInPrice;
            
            private global::System.Data.DataColumn columnGoodsSellPrice;
            
            private global::System.Data.DataColumn columnGoodsShouldPay;
            
            private global::System.Data.DataColumn columnGoodsRealPay;
            
            private global::System.Data.DataColumn columnGoodsRemark;
            
            private global::System.Data.DataColumn columnGoodsInDateTime;
            
            private global::System.Data.DataColumn columnFlage;
            
            private global::System.Data.DataColumn columnGoodsColor;
            
            private global::System.Data.DataColumn columnGoodsSize;
            
            private global::System.Data.DataColumn columnGoodsLeibie;
            
            private global::System.Data.DataColumn columnGoodsShouldJijie;
            
            private global::System.Data.DataColumn columnGoodsPinpai;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInDataTable() {
                this.TableName = "Table_GoodsIn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_GoodsInDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_GoodsInDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StroNameColumn {
                get {
                    return this.columnStroName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsNumColumn {
                get {
                    return this.columnGoodsNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsUnitColumn {
                get {
                    return this.columnGoodsUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsInPriceColumn {
                get {
                    return this.columnGoodsInPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsSellPriceColumn {
                get {
                    return this.columnGoodsSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsShouldPayColumn {
                get {
                    return this.columnGoodsShouldPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsRealPayColumn {
                get {
                    return this.columnGoodsRealPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsRemarkColumn {
                get {
                    return this.columnGoodsRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsInDateTimeColumn {
                get {
                    return this.columnGoodsInDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlageColumn {
                get {
                    return this.columnFlage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsColorColumn {
                get {
                    return this.columnGoodsColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsSizeColumn {
                get {
                    return this.columnGoodsSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsLeibieColumn {
                get {
                    return this.columnGoodsLeibie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsShouldJijieColumn {
                get {
                    return this.columnGoodsShouldJijie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsPinpaiColumn {
                get {
                    return this.columnGoodsPinpai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRow this[int index] {
                get {
                    return ((Table_GoodsInRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsInRowChangeEventHandler Table_GoodsInRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsInRowChangeEventHandler Table_GoodsInRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsInRowChangeEventHandler Table_GoodsInRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsInRowChangeEventHandler Table_GoodsInRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_GoodsInRow(Table_GoodsInRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRow AddTable_GoodsInRow(
                        string GoodsID, 
                        Table_UserMessageRow parentTable_UserMessageRowByFK_Table_GoodsIn_Table_UserMessage, 
                        string CompanyName, 
                        string StroName, 
                        string GoodsName, 
                        int GoodsNum, 
                        string GoodsUnit, 
                        decimal GoodsInPrice, 
                        decimal GoodsSellPrice, 
                        decimal GoodsShouldPay, 
                        decimal GoodsRealPay, 
                        string GoodsRemark, 
                        System.DateTime GoodsInDateTime, 
                        bool Flage, 
                        string GoodsColor, 
                        string GoodsSize, 
                        string GoodsLeibie, 
                        string GoodsShouldJijie, 
                        string GoodsPinpai) {
                Table_GoodsInRow rowTable_GoodsInRow = ((Table_GoodsInRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GoodsID,
                        null,
                        CompanyName,
                        StroName,
                        GoodsName,
                        GoodsNum,
                        GoodsUnit,
                        GoodsInPrice,
                        GoodsSellPrice,
                        GoodsShouldPay,
                        GoodsRealPay,
                        GoodsRemark,
                        GoodsInDateTime,
                        Flage,
                        GoodsColor,
                        GoodsSize,
                        GoodsLeibie,
                        GoodsShouldJijie,
                        GoodsPinpai};
                if ((parentTable_UserMessageRowByFK_Table_GoodsIn_Table_UserMessage != null)) {
                    columnValuesArray[1] = parentTable_UserMessageRowByFK_Table_GoodsIn_Table_UserMessage[0];
                }
                rowTable_GoodsInRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_GoodsInRow);
                return rowTable_GoodsInRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRow FindByGoodsID(string GoodsID) {
                return ((Table_GoodsInRow)(this.Rows.Find(new object[] {
                            GoodsID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_GoodsInDataTable cln = ((Table_GoodsInDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_GoodsInDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnID = base.Columns["ID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnStroName = base.Columns["StroName"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNum = base.Columns["GoodsNum"];
                this.columnGoodsUnit = base.Columns["GoodsUnit"];
                this.columnGoodsInPrice = base.Columns["GoodsInPrice"];
                this.columnGoodsSellPrice = base.Columns["GoodsSellPrice"];
                this.columnGoodsShouldPay = base.Columns["GoodsShouldPay"];
                this.columnGoodsRealPay = base.Columns["GoodsRealPay"];
                this.columnGoodsRemark = base.Columns["GoodsRemark"];
                this.columnGoodsInDateTime = base.Columns["GoodsInDateTime"];
                this.columnFlage = base.Columns["Flage"];
                this.columnGoodsColor = base.Columns["GoodsColor"];
                this.columnGoodsSize = base.Columns["GoodsSize"];
                this.columnGoodsLeibie = base.Columns["GoodsLeibie"];
                this.columnGoodsShouldJijie = base.Columns["GoodsShouldJijie"];
                this.columnGoodsPinpai = base.Columns["GoodsPinpai"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnStroName = new global::System.Data.DataColumn("StroName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStroName);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNum = new global::System.Data.DataColumn("GoodsNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNum);
                this.columnGoodsUnit = new global::System.Data.DataColumn("GoodsUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsUnit);
                this.columnGoodsInPrice = new global::System.Data.DataColumn("GoodsInPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsInPrice);
                this.columnGoodsSellPrice = new global::System.Data.DataColumn("GoodsSellPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsSellPrice);
                this.columnGoodsShouldPay = new global::System.Data.DataColumn("GoodsShouldPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsShouldPay);
                this.columnGoodsRealPay = new global::System.Data.DataColumn("GoodsRealPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsRealPay);
                this.columnGoodsRemark = new global::System.Data.DataColumn("GoodsRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsRemark);
                this.columnGoodsInDateTime = new global::System.Data.DataColumn("GoodsInDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsInDateTime);
                this.columnFlage = new global::System.Data.DataColumn("Flage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlage);
                this.columnGoodsColor = new global::System.Data.DataColumn("GoodsColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsColor);
                this.columnGoodsSize = new global::System.Data.DataColumn("GoodsSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsSize);
                this.columnGoodsLeibie = new global::System.Data.DataColumn("GoodsLeibie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLeibie);
                this.columnGoodsShouldJijie = new global::System.Data.DataColumn("GoodsShouldJijie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsShouldJijie);
                this.columnGoodsPinpai = new global::System.Data.DataColumn("GoodsPinpai", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsPinpai);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGoodsID}, true));
                this.columnGoodsID.AllowDBNull = false;
                this.columnGoodsID.Unique = true;
                this.columnGoodsID.MaxLength = 50;
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 50;
                this.columnCompanyName.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 50;
                this.columnStroName.AllowDBNull = false;
                this.columnStroName.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnGoodsNum.AllowDBNull = false;
                this.columnGoodsUnit.AllowDBNull = false;
                this.columnGoodsUnit.MaxLength = 50;
                this.columnGoodsInPrice.AllowDBNull = false;
                this.columnGoodsSellPrice.AllowDBNull = false;
                this.columnGoodsShouldPay.AllowDBNull = false;
                this.columnGoodsRealPay.AllowDBNull = false;
                this.columnGoodsRemark.MaxLength = 1073741823;
                this.columnGoodsInDateTime.AllowDBNull = false;
                this.columnFlage.AllowDBNull = false;
                this.columnGoodsColor.AllowDBNull = false;
                this.columnGoodsColor.MaxLength = 10;
                this.columnGoodsSize.AllowDBNull = false;
                this.columnGoodsSize.MaxLength = 50;
                this.columnGoodsLeibie.AllowDBNull = false;
                this.columnGoodsLeibie.MaxLength = 30;
                this.columnGoodsShouldJijie.AllowDBNull = false;
                this.columnGoodsShouldJijie.MaxLength = 10;
                this.columnGoodsPinpai.AllowDBNull = false;
                this.columnGoodsPinpai.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRow NewTable_GoodsInRow() {
                return ((Table_GoodsInRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_GoodsInRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_GoodsInRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_GoodsInRowChanged != null)) {
                    this.Table_GoodsInRowChanged(this, new Table_GoodsInRowChangeEvent(((Table_GoodsInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_GoodsInRowChanging != null)) {
                    this.Table_GoodsInRowChanging(this, new Table_GoodsInRowChangeEvent(((Table_GoodsInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_GoodsInRowDeleted != null)) {
                    this.Table_GoodsInRowDeleted(this, new Table_GoodsInRowChangeEvent(((Table_GoodsInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_GoodsInRowDeleting != null)) {
                    this.Table_GoodsInRowDeleting(this, new Table_GoodsInRowChangeEvent(((Table_GoodsInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_GoodsInRow(Table_GoodsInRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_GoodsInDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_GoodsSellDataTable : global::System.Data.TypedTableBase<Table_GoodsSellRow> {
            
            private global::System.Data.DataColumn columnSellID;
            
            private global::System.Data.DataColumn columnKcID;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnSellGoodsNumber;
            
            private global::System.Data.DataColumn columnSellGoodsTime;
            
            private global::System.Data.DataColumn columnSellPrice;
            
            private global::System.Data.DataColumn columnSellShouldPay;
            
            private global::System.Data.DataColumn columnSellRealPay;
            
            private global::System.Data.DataColumn columnSellRemark;
            
            private global::System.Data.DataColumn columnSellflage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellDataTable() {
                this.TableName = "Table_GoodsSell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_GoodsSellDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_GoodsSellDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellIDColumn {
                get {
                    return this.columnSellID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcIDColumn {
                get {
                    return this.columnKcID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellGoodsNumberColumn {
                get {
                    return this.columnSellGoodsNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellGoodsTimeColumn {
                get {
                    return this.columnSellGoodsTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellPriceColumn {
                get {
                    return this.columnSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellShouldPayColumn {
                get {
                    return this.columnSellShouldPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellRealPayColumn {
                get {
                    return this.columnSellRealPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellRemarkColumn {
                get {
                    return this.columnSellRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellflageColumn {
                get {
                    return this.columnSellflage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRow this[int index] {
                get {
                    return ((Table_GoodsSellRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsSellRowChangeEventHandler Table_GoodsSellRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsSellRowChangeEventHandler Table_GoodsSellRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsSellRowChangeEventHandler Table_GoodsSellRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_GoodsSellRowChangeEventHandler Table_GoodsSellRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_GoodsSellRow(Table_GoodsSellRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRow AddTable_GoodsSellRow(string SellID, string KcID, string GoodsID, Table_UserMessageRow parentTable_UserMessageRowByFK_Table_GoodsSell_Table_UserMessage, string GoodsName, int SellGoodsNumber, System.DateTime SellGoodsTime, decimal SellPrice, decimal SellShouldPay, decimal SellRealPay, string SellRemark, bool Sellflage) {
                Table_GoodsSellRow rowTable_GoodsSellRow = ((Table_GoodsSellRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SellID,
                        KcID,
                        GoodsID,
                        null,
                        GoodsName,
                        SellGoodsNumber,
                        SellGoodsTime,
                        SellPrice,
                        SellShouldPay,
                        SellRealPay,
                        SellRemark,
                        Sellflage};
                if ((parentTable_UserMessageRowByFK_Table_GoodsSell_Table_UserMessage != null)) {
                    columnValuesArray[3] = parentTable_UserMessageRowByFK_Table_GoodsSell_Table_UserMessage[0];
                }
                rowTable_GoodsSellRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_GoodsSellRow);
                return rowTable_GoodsSellRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRow FindBySellIDGoodsName(string SellID, string GoodsName) {
                return ((Table_GoodsSellRow)(this.Rows.Find(new object[] {
                            SellID,
                            GoodsName})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_GoodsSellDataTable cln = ((Table_GoodsSellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_GoodsSellDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSellID = base.Columns["SellID"];
                this.columnKcID = base.Columns["KcID"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnID = base.Columns["ID"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnSellGoodsNumber = base.Columns["SellGoodsNumber"];
                this.columnSellGoodsTime = base.Columns["SellGoodsTime"];
                this.columnSellPrice = base.Columns["SellPrice"];
                this.columnSellShouldPay = base.Columns["SellShouldPay"];
                this.columnSellRealPay = base.Columns["SellRealPay"];
                this.columnSellRemark = base.Columns["SellRemark"];
                this.columnSellflage = base.Columns["Sellflage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSellID = new global::System.Data.DataColumn("SellID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellID);
                this.columnKcID = new global::System.Data.DataColumn("KcID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcID);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnSellGoodsNumber = new global::System.Data.DataColumn("SellGoodsNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellGoodsNumber);
                this.columnSellGoodsTime = new global::System.Data.DataColumn("SellGoodsTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellGoodsTime);
                this.columnSellPrice = new global::System.Data.DataColumn("SellPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellPrice);
                this.columnSellShouldPay = new global::System.Data.DataColumn("SellShouldPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellShouldPay);
                this.columnSellRealPay = new global::System.Data.DataColumn("SellRealPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellRealPay);
                this.columnSellRemark = new global::System.Data.DataColumn("SellRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellRemark);
                this.columnSellflage = new global::System.Data.DataColumn("Sellflage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellflage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSellID,
                                this.columnGoodsName}, true));
                this.columnSellID.AllowDBNull = false;
                this.columnSellID.MaxLength = 50;
                this.columnKcID.AllowDBNull = false;
                this.columnKcID.MaxLength = 50;
                this.columnGoodsID.AllowDBNull = false;
                this.columnGoodsID.MaxLength = 50;
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 50;
                this.columnGoodsName.AllowDBNull = false;
                this.columnGoodsName.MaxLength = 50;
                this.columnSellGoodsNumber.AllowDBNull = false;
                this.columnSellGoodsTime.AllowDBNull = false;
                this.columnSellPrice.AllowDBNull = false;
                this.columnSellShouldPay.AllowDBNull = false;
                this.columnSellRealPay.AllowDBNull = false;
                this.columnSellRemark.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRow NewTable_GoodsSellRow() {
                return ((Table_GoodsSellRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_GoodsSellRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_GoodsSellRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_GoodsSellRowChanged != null)) {
                    this.Table_GoodsSellRowChanged(this, new Table_GoodsSellRowChangeEvent(((Table_GoodsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_GoodsSellRowChanging != null)) {
                    this.Table_GoodsSellRowChanging(this, new Table_GoodsSellRowChangeEvent(((Table_GoodsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_GoodsSellRowDeleted != null)) {
                    this.Table_GoodsSellRowDeleted(this, new Table_GoodsSellRowChangeEvent(((Table_GoodsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_GoodsSellRowDeleting != null)) {
                    this.Table_GoodsSellRowDeleting(this, new Table_GoodsSellRowChangeEvent(((Table_GoodsSellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_GoodsSellRow(Table_GoodsSellRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_GoodsSellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_StorDataTable : global::System.Data.TypedTableBase<Table_StorRow> {
            
            private global::System.Data.DataColumn columnKcID;
            
            private global::System.Data.DataColumn columnGoodsID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnKcName;
            
            private global::System.Data.DataColumn columnKcGoodsName;
            
            private global::System.Data.DataColumn columnKcNumber;
            
            private global::System.Data.DataColumn columnKcJingGaoNumber;
            
            private global::System.Data.DataColumn columnKcDataTime;
            
            private global::System.Data.DataColumn columnKcUnit;
            
            private global::System.Data.DataColumn columnKcGoodsPrice;
            
            private global::System.Data.DataColumn columnKcGoodsSellPrice;
            
            private global::System.Data.DataColumn columnKcRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorDataTable() {
                this.TableName = "Table_Stor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_StorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_StorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcIDColumn {
                get {
                    return this.columnKcID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsIDColumn {
                get {
                    return this.columnGoodsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcNameColumn {
                get {
                    return this.columnKcName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcGoodsNameColumn {
                get {
                    return this.columnKcGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcNumberColumn {
                get {
                    return this.columnKcNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcJingGaoNumberColumn {
                get {
                    return this.columnKcJingGaoNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcDataTimeColumn {
                get {
                    return this.columnKcDataTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcUnitColumn {
                get {
                    return this.columnKcUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcGoodsPriceColumn {
                get {
                    return this.columnKcGoodsPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcGoodsSellPriceColumn {
                get {
                    return this.columnKcGoodsSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KcRemarkColumn {
                get {
                    return this.columnKcRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorRow this[int index] {
                get {
                    return ((Table_StorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_StorRowChangeEventHandler Table_StorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_StorRowChangeEventHandler Table_StorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_StorRowChangeEventHandler Table_StorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_StorRowChangeEventHandler Table_StorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_StorRow(Table_StorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorRow AddTable_StorRow(string KcID, string GoodsID, string CompanyName, string KcName, string KcGoodsName, int KcNumber, int KcJingGaoNumber, System.DateTime KcDataTime, string KcUnit, decimal KcGoodsPrice, decimal KcGoodsSellPrice, string KcRemark) {
                Table_StorRow rowTable_StorRow = ((Table_StorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KcID,
                        GoodsID,
                        CompanyName,
                        KcName,
                        KcGoodsName,
                        KcNumber,
                        KcJingGaoNumber,
                        KcDataTime,
                        KcUnit,
                        KcGoodsPrice,
                        KcGoodsSellPrice,
                        KcRemark};
                rowTable_StorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_StorRow);
                return rowTable_StorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorRow FindByGoodsID(string GoodsID) {
                return ((Table_StorRow)(this.Rows.Find(new object[] {
                            GoodsID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_StorDataTable cln = ((Table_StorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_StorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKcID = base.Columns["KcID"];
                this.columnGoodsID = base.Columns["GoodsID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnKcName = base.Columns["KcName"];
                this.columnKcGoodsName = base.Columns["KcGoodsName"];
                this.columnKcNumber = base.Columns["KcNumber"];
                this.columnKcJingGaoNumber = base.Columns["KcJingGaoNumber"];
                this.columnKcDataTime = base.Columns["KcDataTime"];
                this.columnKcUnit = base.Columns["KcUnit"];
                this.columnKcGoodsPrice = base.Columns["KcGoodsPrice"];
                this.columnKcGoodsSellPrice = base.Columns["KcGoodsSellPrice"];
                this.columnKcRemark = base.Columns["KcRemark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKcID = new global::System.Data.DataColumn("KcID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcID);
                this.columnGoodsID = new global::System.Data.DataColumn("GoodsID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnKcName = new global::System.Data.DataColumn("KcName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcName);
                this.columnKcGoodsName = new global::System.Data.DataColumn("KcGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcGoodsName);
                this.columnKcNumber = new global::System.Data.DataColumn("KcNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcNumber);
                this.columnKcJingGaoNumber = new global::System.Data.DataColumn("KcJingGaoNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcJingGaoNumber);
                this.columnKcDataTime = new global::System.Data.DataColumn("KcDataTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcDataTime);
                this.columnKcUnit = new global::System.Data.DataColumn("KcUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcUnit);
                this.columnKcGoodsPrice = new global::System.Data.DataColumn("KcGoodsPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcGoodsPrice);
                this.columnKcGoodsSellPrice = new global::System.Data.DataColumn("KcGoodsSellPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcGoodsSellPrice);
                this.columnKcRemark = new global::System.Data.DataColumn("KcRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKcRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGoodsID}, true));
                this.columnKcID.AllowDBNull = false;
                this.columnKcID.MaxLength = 50;
                this.columnGoodsID.AllowDBNull = false;
                this.columnGoodsID.Unique = true;
                this.columnGoodsID.MaxLength = 50;
                this.columnCompanyName.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 50;
                this.columnKcName.AllowDBNull = false;
                this.columnKcName.MaxLength = 50;
                this.columnKcGoodsName.AllowDBNull = false;
                this.columnKcGoodsName.MaxLength = 50;
                this.columnKcNumber.AllowDBNull = false;
                this.columnKcDataTime.AllowDBNull = false;
                this.columnKcUnit.AllowDBNull = false;
                this.columnKcUnit.MaxLength = 50;
                this.columnKcGoodsPrice.AllowDBNull = false;
                this.columnKcGoodsSellPrice.AllowDBNull = false;
                this.columnKcRemark.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorRow NewTable_StorRow() {
                return ((Table_StorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_StorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_StorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_StorRowChanged != null)) {
                    this.Table_StorRowChanged(this, new Table_StorRowChangeEvent(((Table_StorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_StorRowChanging != null)) {
                    this.Table_StorRowChanging(this, new Table_StorRowChangeEvent(((Table_StorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_StorRowDeleted != null)) {
                    this.Table_StorRowDeleted(this, new Table_StorRowChangeEvent(((Table_StorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_StorRowDeleting != null)) {
                    this.Table_StorRowDeleting(this, new Table_StorRowChangeEvent(((Table_StorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_StorRow(Table_StorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_StorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_SupplierDataTable : global::System.Data.TypedTableBase<Table_SupplierRow> {
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyDirector;
            
            private global::System.Data.DataColumn columnCompanyPhone;
            
            private global::System.Data.DataColumn columnCompanyAddress;
            
            private global::System.Data.DataColumn columnCompanyReMark;
            
            private global::System.Data.DataColumn columnInDateTime;
            
            private global::System.Data.DataColumn columnIsUsed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierDataTable() {
                this.TableName = "Table_Supplier";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_SupplierDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_SupplierDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyDirectorColumn {
                get {
                    return this.columnCompanyDirector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyPhoneColumn {
                get {
                    return this.columnCompanyPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyAddressColumn {
                get {
                    return this.columnCompanyAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyReMarkColumn {
                get {
                    return this.columnCompanyReMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InDateTimeColumn {
                get {
                    return this.columnInDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsUsedColumn {
                get {
                    return this.columnIsUsed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierRow this[int index] {
                get {
                    return ((Table_SupplierRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_SupplierRowChangeEventHandler Table_SupplierRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_SupplierRowChangeEventHandler Table_SupplierRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_SupplierRowChangeEventHandler Table_SupplierRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_SupplierRowChangeEventHandler Table_SupplierRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_SupplierRow(Table_SupplierRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierRow AddTable_SupplierRow(string CompanyID, string CompanyName, string CompanyDirector, string CompanyPhone, string CompanyAddress, string CompanyReMark, System.DateTime InDateTime, bool IsUsed) {
                Table_SupplierRow rowTable_SupplierRow = ((Table_SupplierRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompanyID,
                        CompanyName,
                        CompanyDirector,
                        CompanyPhone,
                        CompanyAddress,
                        CompanyReMark,
                        InDateTime,
                        IsUsed};
                rowTable_SupplierRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_SupplierRow);
                return rowTable_SupplierRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierRow FindByCompanyID(string CompanyID) {
                return ((Table_SupplierRow)(this.Rows.Find(new object[] {
                            CompanyID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_SupplierDataTable cln = ((Table_SupplierDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_SupplierDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyDirector = base.Columns["CompanyDirector"];
                this.columnCompanyPhone = base.Columns["CompanyPhone"];
                this.columnCompanyAddress = base.Columns["CompanyAddress"];
                this.columnCompanyReMark = base.Columns["CompanyReMark"];
                this.columnInDateTime = base.Columns["InDateTime"];
                this.columnIsUsed = base.Columns["IsUsed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyDirector = new global::System.Data.DataColumn("CompanyDirector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyDirector);
                this.columnCompanyPhone = new global::System.Data.DataColumn("CompanyPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyPhone);
                this.columnCompanyAddress = new global::System.Data.DataColumn("CompanyAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyAddress);
                this.columnCompanyReMark = new global::System.Data.DataColumn("CompanyReMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyReMark);
                this.columnInDateTime = new global::System.Data.DataColumn("InDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDateTime);
                this.columnIsUsed = new global::System.Data.DataColumn("IsUsed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUsed);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompanyID}, true));
                this.columnCompanyID.AllowDBNull = false;
                this.columnCompanyID.Unique = true;
                this.columnCompanyID.MaxLength = 50;
                this.columnCompanyName.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 50;
                this.columnCompanyDirector.AllowDBNull = false;
                this.columnCompanyDirector.MaxLength = 50;
                this.columnCompanyPhone.AllowDBNull = false;
                this.columnCompanyPhone.MaxLength = 20;
                this.columnCompanyAddress.AllowDBNull = false;
                this.columnCompanyAddress.MaxLength = 50;
                this.columnCompanyReMark.MaxLength = 1073741823;
                this.columnInDateTime.AllowDBNull = false;
                this.columnIsUsed.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierRow NewTable_SupplierRow() {
                return ((Table_SupplierRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_SupplierRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_SupplierRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_SupplierRowChanged != null)) {
                    this.Table_SupplierRowChanged(this, new Table_SupplierRowChangeEvent(((Table_SupplierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_SupplierRowChanging != null)) {
                    this.Table_SupplierRowChanging(this, new Table_SupplierRowChangeEvent(((Table_SupplierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_SupplierRowDeleted != null)) {
                    this.Table_SupplierRowDeleted(this, new Table_SupplierRowChangeEvent(((Table_SupplierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_SupplierRowDeleting != null)) {
                    this.Table_SupplierRowDeleting(this, new Table_SupplierRowChangeEvent(((Table_SupplierRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_SupplierRow(Table_SupplierRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_SupplierDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_UserMessageDataTable : global::System.Data.TypedTableBase<Table_UserMessageRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLoginName;
            
            private global::System.Data.DataColumn columnLoginPassWord;
            
            private global::System.Data.DataColumn columnLoginPassWord2;
            
            private global::System.Data.DataColumn columnRealName;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnLevel;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnReMark;
            
            private global::System.Data.DataColumn columnIsCanuse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageDataTable() {
                this.TableName = "Table_UserMessage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_UserMessageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_UserMessageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoginNameColumn {
                get {
                    return this.columnLoginName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoginPassWordColumn {
                get {
                    return this.columnLoginPassWord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoginPassWord2Column {
                get {
                    return this.columnLoginPassWord2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealNameColumn {
                get {
                    return this.columnRealName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LevelColumn {
                get {
                    return this.columnLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReMarkColumn {
                get {
                    return this.columnReMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCanuseColumn {
                get {
                    return this.columnIsCanuse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow this[int index] {
                get {
                    return ((Table_UserMessageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_UserMessageRowChangeEventHandler Table_UserMessageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_UserMessageRowChangeEventHandler Table_UserMessageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_UserMessageRowChangeEventHandler Table_UserMessageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_UserMessageRowChangeEventHandler Table_UserMessageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_UserMessageRow(Table_UserMessageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow AddTable_UserMessageRow(string ID, string LoginName, string LoginPassWord, string LoginPassWord2, string RealName, string PhoneNumber, string Level, string Address, string ReMark, bool IsCanuse) {
                Table_UserMessageRow rowTable_UserMessageRow = ((Table_UserMessageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        LoginName,
                        LoginPassWord,
                        LoginPassWord2,
                        RealName,
                        PhoneNumber,
                        Level,
                        Address,
                        ReMark,
                        IsCanuse};
                rowTable_UserMessageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_UserMessageRow);
                return rowTable_UserMessageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow FindByID(string ID) {
                return ((Table_UserMessageRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_UserMessageDataTable cln = ((Table_UserMessageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_UserMessageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLoginName = base.Columns["LoginName"];
                this.columnLoginPassWord = base.Columns["LoginPassWord"];
                this.columnLoginPassWord2 = base.Columns["LoginPassWord2"];
                this.columnRealName = base.Columns["RealName"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnLevel = base.Columns["Level"];
                this.columnAddress = base.Columns["Address"];
                this.columnReMark = base.Columns["ReMark"];
                this.columnIsCanuse = base.Columns["IsCanuse"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLoginName = new global::System.Data.DataColumn("LoginName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginName);
                this.columnLoginPassWord = new global::System.Data.DataColumn("LoginPassWord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginPassWord);
                this.columnLoginPassWord2 = new global::System.Data.DataColumn("LoginPassWord2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginPassWord2);
                this.columnRealName = new global::System.Data.DataColumn("RealName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealName);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnLevel = new global::System.Data.DataColumn("Level", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevel);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnReMark = new global::System.Data.DataColumn("ReMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReMark);
                this.columnIsCanuse = new global::System.Data.DataColumn("IsCanuse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCanuse);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnID.MaxLength = 50;
                this.columnLoginName.AllowDBNull = false;
                this.columnLoginName.MaxLength = 20;
                this.columnLoginPassWord.AllowDBNull = false;
                this.columnLoginPassWord.MaxLength = 40;
                this.columnLoginPassWord2.AllowDBNull = false;
                this.columnLoginPassWord2.MaxLength = 50;
                this.columnRealName.AllowDBNull = false;
                this.columnRealName.MaxLength = 50;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 20;
                this.columnLevel.AllowDBNull = false;
                this.columnLevel.MaxLength = 10;
                this.columnAddress.MaxLength = 50;
                this.columnReMark.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow NewTable_UserMessageRow() {
                return ((Table_UserMessageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_UserMessageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_UserMessageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_UserMessageRowChanged != null)) {
                    this.Table_UserMessageRowChanged(this, new Table_UserMessageRowChangeEvent(((Table_UserMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_UserMessageRowChanging != null)) {
                    this.Table_UserMessageRowChanging(this, new Table_UserMessageRowChangeEvent(((Table_UserMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_UserMessageRowDeleted != null)) {
                    this.Table_UserMessageRowDeleted(this, new Table_UserMessageRowChangeEvent(((Table_UserMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_UserMessageRowDeleting != null)) {
                    this.Table_UserMessageRowDeleting(this, new Table_UserMessageRowChangeEvent(((Table_UserMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_UserMessageRow(Table_UserMessageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_UserMessageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_VIPMessageDataTable : global::System.Data.TypedTableBase<Table_VIPMessageRow> {
            
            private global::System.Data.DataColumn columnVIPID;
            
            private global::System.Data.DataColumn columnVIPName;
            
            private global::System.Data.DataColumn columnVIPPhone;
            
            private global::System.Data.DataColumn columnVIPAddress;
            
            private global::System.Data.DataColumn columnVIPZhekou;
            
            private global::System.Data.DataColumn columnFlage;
            
            private global::System.Data.DataColumn columnVIPRemrk;
            
            private global::System.Data.DataColumn columnVIPBirtheDay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageDataTable() {
                this.TableName = "Table_VIPMessage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_VIPMessageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table_VIPMessageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPIDColumn {
                get {
                    return this.columnVIPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPNameColumn {
                get {
                    return this.columnVIPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPPhoneColumn {
                get {
                    return this.columnVIPPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPAddressColumn {
                get {
                    return this.columnVIPAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPZhekouColumn {
                get {
                    return this.columnVIPZhekou;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlageColumn {
                get {
                    return this.columnFlage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPRemrkColumn {
                get {
                    return this.columnVIPRemrk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIPBirtheDayColumn {
                get {
                    return this.columnVIPBirtheDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageRow this[int index] {
                get {
                    return ((Table_VIPMessageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_VIPMessageRowChangeEventHandler Table_VIPMessageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_VIPMessageRowChangeEventHandler Table_VIPMessageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_VIPMessageRowChangeEventHandler Table_VIPMessageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table_VIPMessageRowChangeEventHandler Table_VIPMessageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable_VIPMessageRow(Table_VIPMessageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageRow AddTable_VIPMessageRow(string VIPID, string VIPName, string VIPPhone, string VIPAddress, decimal VIPZhekou, bool Flage, string VIPRemrk, System.DateTime VIPBirtheDay) {
                Table_VIPMessageRow rowTable_VIPMessageRow = ((Table_VIPMessageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VIPID,
                        VIPName,
                        VIPPhone,
                        VIPAddress,
                        VIPZhekou,
                        Flage,
                        VIPRemrk,
                        VIPBirtheDay};
                rowTable_VIPMessageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_VIPMessageRow);
                return rowTable_VIPMessageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageRow FindByVIPID(string VIPID) {
                return ((Table_VIPMessageRow)(this.Rows.Find(new object[] {
                            VIPID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_VIPMessageDataTable cln = ((Table_VIPMessageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_VIPMessageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVIPID = base.Columns["VIPID"];
                this.columnVIPName = base.Columns["VIPName"];
                this.columnVIPPhone = base.Columns["VIPPhone"];
                this.columnVIPAddress = base.Columns["VIPAddress"];
                this.columnVIPZhekou = base.Columns["VIPZhekou"];
                this.columnFlage = base.Columns["Flage"];
                this.columnVIPRemrk = base.Columns["VIPRemrk"];
                this.columnVIPBirtheDay = base.Columns["VIPBirtheDay"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVIPID = new global::System.Data.DataColumn("VIPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPID);
                this.columnVIPName = new global::System.Data.DataColumn("VIPName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPName);
                this.columnVIPPhone = new global::System.Data.DataColumn("VIPPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPPhone);
                this.columnVIPAddress = new global::System.Data.DataColumn("VIPAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPAddress);
                this.columnVIPZhekou = new global::System.Data.DataColumn("VIPZhekou", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPZhekou);
                this.columnFlage = new global::System.Data.DataColumn("Flage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlage);
                this.columnVIPRemrk = new global::System.Data.DataColumn("VIPRemrk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPRemrk);
                this.columnVIPBirtheDay = new global::System.Data.DataColumn("VIPBirtheDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIPBirtheDay);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVIPID}, true));
                this.columnVIPID.AllowDBNull = false;
                this.columnVIPID.Unique = true;
                this.columnVIPID.MaxLength = 50;
                this.columnVIPName.AllowDBNull = false;
                this.columnVIPName.MaxLength = 50;
                this.columnVIPPhone.AllowDBNull = false;
                this.columnVIPPhone.MaxLength = 20;
                this.columnVIPAddress.AllowDBNull = false;
                this.columnVIPAddress.MaxLength = 50;
                this.columnVIPZhekou.AllowDBNull = false;
                this.columnFlage.AllowDBNull = false;
                this.columnVIPRemrk.MaxLength = 1073741823;
                this.columnVIPBirtheDay.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageRow NewTable_VIPMessageRow() {
                return ((Table_VIPMessageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_VIPMessageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_VIPMessageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_VIPMessageRowChanged != null)) {
                    this.Table_VIPMessageRowChanged(this, new Table_VIPMessageRowChangeEvent(((Table_VIPMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_VIPMessageRowChanging != null)) {
                    this.Table_VIPMessageRowChanging(this, new Table_VIPMessageRowChangeEvent(((Table_VIPMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_VIPMessageRowDeleted != null)) {
                    this.Table_VIPMessageRowDeleted(this, new Table_VIPMessageRowChangeEvent(((Table_VIPMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_VIPMessageRowDeleting != null)) {
                    this.Table_VIPMessageRowDeleting(this, new Table_VIPMessageRowChangeEvent(((Table_VIPMessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable_VIPMessageRow(Table_VIPMessageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBCLDataSet ds = new DBCLDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_VIPMessageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_GoodsBackRow : global::System.Data.DataRow {
            
            private Table_GoodsBackDataTable tableTable_GoodsBack;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_GoodsBackRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_GoodsBack = ((Table_GoodsBackDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThGoodsID {
                get {
                    return ((string)(this[this.tableTable_GoodsBack.ThGoodsIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThGoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcID {
                get {
                    return ((string)(this[this.tableTable_GoodsBack.KcIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.KcIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsID {
                get {
                    return ((string)(this[this.tableTable_GoodsBack.GoodsIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SellID {
                get {
                    return ((string)(this[this.tableTable_GoodsBack.SellIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.SellIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tableTable_GoodsBack.IDColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThGoodsName {
                get {
                    return ((string)(this[this.tableTable_GoodsBack.ThGoodsNameColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ThGoodsNumber {
                get {
                    return ((int)(this[this.tableTable_GoodsBack.ThGoodsNumberColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThGoodsNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ThGoodsTime {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_GoodsBack.ThGoodsTimeColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThGoodsTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ThGoodsPrice {
                get {
                    return ((decimal)(this[this.tableTable_GoodsBack.ThGoodsPriceColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThGoodsPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ThRealPay {
                get {
                    return ((decimal)(this[this.tableTable_GoodsBack.ThRealPayColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThRealPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ThHasPay {
                get {
                    return ((decimal)(this[this.tableTable_GoodsBack.ThHasPayColumn]));
                }
                set {
                    this[this.tableTable_GoodsBack.ThHasPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThRemark {
                get {
                    try {
                        return ((string)(this[this.tableTable_GoodsBack.ThRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_GoodsBack”中列“ThRemark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_GoodsBack.ThRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThRemarkNull() {
                return this.IsNull(this.tableTable_GoodsBack.ThRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThRemarkNull() {
                this[this.tableTable_GoodsBack.ThRemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_GoodsInRow : global::System.Data.DataRow {
            
            private Table_GoodsInDataTable tableTable_GoodsIn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_GoodsInRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_GoodsIn = ((Table_GoodsInDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsID {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.IDColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyName {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.CompanyNameColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StroName {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.StroNameColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.StroNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsNameColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GoodsNum {
                get {
                    return ((int)(this[this.tableTable_GoodsIn.GoodsNumColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsUnit {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsUnitColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GoodsInPrice {
                get {
                    return ((decimal)(this[this.tableTable_GoodsIn.GoodsInPriceColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsInPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GoodsSellPrice {
                get {
                    return ((decimal)(this[this.tableTable_GoodsIn.GoodsSellPriceColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsSellPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GoodsShouldPay {
                get {
                    return ((decimal)(this[this.tableTable_GoodsIn.GoodsShouldPayColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsShouldPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GoodsRealPay {
                get {
                    return ((decimal)(this[this.tableTable_GoodsIn.GoodsRealPayColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsRealPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsRemark {
                get {
                    try {
                        return ((string)(this[this.tableTable_GoodsIn.GoodsRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_GoodsIn”中列“GoodsRemark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime GoodsInDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_GoodsIn.GoodsInDateTimeColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsInDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Flage {
                get {
                    return ((bool)(this[this.tableTable_GoodsIn.FlageColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.FlageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsColor {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsColorColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsSize {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsSizeColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsLeibie {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsLeibieColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsLeibieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsShouldJijie {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsShouldJijieColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsShouldJijieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsPinpai {
                get {
                    return ((string)(this[this.tableTable_GoodsIn.GoodsPinpaiColumn]));
                }
                set {
                    this[this.tableTable_GoodsIn.GoodsPinpaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow Table_UserMessageRow {
                get {
                    return ((Table_UserMessageRow)(this.GetParentRow(this.Table.ParentRelations["FK_Table_GoodsIn_Table_UserMessage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Table_GoodsIn_Table_UserMessage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGoodsRemarkNull() {
                return this.IsNull(this.tableTable_GoodsIn.GoodsRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGoodsRemarkNull() {
                this[this.tableTable_GoodsIn.GoodsRemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_GoodsSellRow : global::System.Data.DataRow {
            
            private Table_GoodsSellDataTable tableTable_GoodsSell;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_GoodsSellRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_GoodsSell = ((Table_GoodsSellDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SellID {
                get {
                    return ((string)(this[this.tableTable_GoodsSell.SellIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.SellIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcID {
                get {
                    return ((string)(this[this.tableTable_GoodsSell.KcIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.KcIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsID {
                get {
                    return ((string)(this[this.tableTable_GoodsSell.GoodsIDColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tableTable_GoodsSell.IDColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsName {
                get {
                    return ((string)(this[this.tableTable_GoodsSell.GoodsNameColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellGoodsNumber {
                get {
                    return ((int)(this[this.tableTable_GoodsSell.SellGoodsNumberColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.SellGoodsNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SellGoodsTime {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_GoodsSell.SellGoodsTimeColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.SellGoodsTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SellPrice {
                get {
                    return ((decimal)(this[this.tableTable_GoodsSell.SellPriceColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.SellPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SellShouldPay {
                get {
                    return ((decimal)(this[this.tableTable_GoodsSell.SellShouldPayColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.SellShouldPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SellRealPay {
                get {
                    return ((decimal)(this[this.tableTable_GoodsSell.SellRealPayColumn]));
                }
                set {
                    this[this.tableTable_GoodsSell.SellRealPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SellRemark {
                get {
                    try {
                        return ((string)(this[this.tableTable_GoodsSell.SellRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_GoodsSell”中列“SellRemark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_GoodsSell.SellRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Sellflage {
                get {
                    try {
                        return ((bool)(this[this.tableTable_GoodsSell.SellflageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_GoodsSell”中列“Sellflage”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_GoodsSell.SellflageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow Table_UserMessageRow {
                get {
                    return ((Table_UserMessageRow)(this.GetParentRow(this.Table.ParentRelations["FK_Table_GoodsSell_Table_UserMessage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Table_GoodsSell_Table_UserMessage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellRemarkNull() {
                return this.IsNull(this.tableTable_GoodsSell.SellRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellRemarkNull() {
                this[this.tableTable_GoodsSell.SellRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellflageNull() {
                return this.IsNull(this.tableTable_GoodsSell.SellflageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellflageNull() {
                this[this.tableTable_GoodsSell.SellflageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_StorRow : global::System.Data.DataRow {
            
            private Table_StorDataTable tableTable_Stor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_StorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_Stor = ((Table_StorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcID {
                get {
                    return ((string)(this[this.tableTable_Stor.KcIDColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodsID {
                get {
                    return ((string)(this[this.tableTable_Stor.GoodsIDColumn]));
                }
                set {
                    this[this.tableTable_Stor.GoodsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyName {
                get {
                    return ((string)(this[this.tableTable_Stor.CompanyNameColumn]));
                }
                set {
                    this[this.tableTable_Stor.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcName {
                get {
                    return ((string)(this[this.tableTable_Stor.KcNameColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcGoodsName {
                get {
                    return ((string)(this[this.tableTable_Stor.KcGoodsNameColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KcNumber {
                get {
                    return ((int)(this[this.tableTable_Stor.KcNumberColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KcJingGaoNumber {
                get {
                    try {
                        return ((int)(this[this.tableTable_Stor.KcJingGaoNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_Stor”中列“KcJingGaoNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_Stor.KcJingGaoNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KcDataTime {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_Stor.KcDataTimeColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcDataTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcUnit {
                get {
                    return ((string)(this[this.tableTable_Stor.KcUnitColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KcGoodsPrice {
                get {
                    return ((decimal)(this[this.tableTable_Stor.KcGoodsPriceColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcGoodsPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KcGoodsSellPrice {
                get {
                    return ((decimal)(this[this.tableTable_Stor.KcGoodsSellPriceColumn]));
                }
                set {
                    this[this.tableTable_Stor.KcGoodsSellPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KcRemark {
                get {
                    try {
                        return ((string)(this[this.tableTable_Stor.KcRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_Stor”中列“KcRemark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_Stor.KcRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKcJingGaoNumberNull() {
                return this.IsNull(this.tableTable_Stor.KcJingGaoNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKcJingGaoNumberNull() {
                this[this.tableTable_Stor.KcJingGaoNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKcRemarkNull() {
                return this.IsNull(this.tableTable_Stor.KcRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKcRemarkNull() {
                this[this.tableTable_Stor.KcRemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_SupplierRow : global::System.Data.DataRow {
            
            private Table_SupplierDataTable tableTable_Supplier;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_SupplierRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_Supplier = ((Table_SupplierDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyID {
                get {
                    return ((string)(this[this.tableTable_Supplier.CompanyIDColumn]));
                }
                set {
                    this[this.tableTable_Supplier.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyName {
                get {
                    return ((string)(this[this.tableTable_Supplier.CompanyNameColumn]));
                }
                set {
                    this[this.tableTable_Supplier.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyDirector {
                get {
                    return ((string)(this[this.tableTable_Supplier.CompanyDirectorColumn]));
                }
                set {
                    this[this.tableTable_Supplier.CompanyDirectorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyPhone {
                get {
                    return ((string)(this[this.tableTable_Supplier.CompanyPhoneColumn]));
                }
                set {
                    this[this.tableTable_Supplier.CompanyPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyAddress {
                get {
                    return ((string)(this[this.tableTable_Supplier.CompanyAddressColumn]));
                }
                set {
                    this[this.tableTable_Supplier.CompanyAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyReMark {
                get {
                    try {
                        return ((string)(this[this.tableTable_Supplier.CompanyReMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_Supplier”中列“CompanyReMark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_Supplier.CompanyReMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_Supplier.InDateTimeColumn]));
                }
                set {
                    this[this.tableTable_Supplier.InDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUsed {
                get {
                    return ((bool)(this[this.tableTable_Supplier.IsUsedColumn]));
                }
                set {
                    this[this.tableTable_Supplier.IsUsedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyReMarkNull() {
                return this.IsNull(this.tableTable_Supplier.CompanyReMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyReMarkNull() {
                this[this.tableTable_Supplier.CompanyReMarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_UserMessageRow : global::System.Data.DataRow {
            
            private Table_UserMessageDataTable tableTable_UserMessage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_UserMessageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_UserMessage = ((Table_UserMessageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tableTable_UserMessage.IDColumn]));
                }
                set {
                    this[this.tableTable_UserMessage.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoginName {
                get {
                    return ((string)(this[this.tableTable_UserMessage.LoginNameColumn]));
                }
                set {
                    this[this.tableTable_UserMessage.LoginNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoginPassWord {
                get {
                    return ((string)(this[this.tableTable_UserMessage.LoginPassWordColumn]));
                }
                set {
                    this[this.tableTable_UserMessage.LoginPassWordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoginPassWord2 {
                get {
                    return ((string)(this[this.tableTable_UserMessage.LoginPassWord2Column]));
                }
                set {
                    this[this.tableTable_UserMessage.LoginPassWord2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealName {
                get {
                    return ((string)(this[this.tableTable_UserMessage.RealNameColumn]));
                }
                set {
                    this[this.tableTable_UserMessage.RealNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableTable_UserMessage.PhoneNumberColumn]));
                }
                set {
                    this[this.tableTable_UserMessage.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Level {
                get {
                    return ((string)(this[this.tableTable_UserMessage.LevelColumn]));
                }
                set {
                    this[this.tableTable_UserMessage.LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableTable_UserMessage.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_UserMessage”中列“Address”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_UserMessage.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReMark {
                get {
                    try {
                        return ((string)(this[this.tableTable_UserMessage.ReMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_UserMessage”中列“ReMark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_UserMessage.ReMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCanuse {
                get {
                    try {
                        return ((bool)(this[this.tableTable_UserMessage.IsCanuseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_UserMessage”中列“IsCanuse”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_UserMessage.IsCanuseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableTable_UserMessage.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableTable_UserMessage.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReMarkNull() {
                return this.IsNull(this.tableTable_UserMessage.ReMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReMarkNull() {
                this[this.tableTable_UserMessage.ReMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCanuseNull() {
                return this.IsNull(this.tableTable_UserMessage.IsCanuseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCanuseNull() {
                this[this.tableTable_UserMessage.IsCanuseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRow[] GetTable_GoodsInRows() {
                if ((this.Table.ChildRelations["FK_Table_GoodsIn_Table_UserMessage"] == null)) {
                    return new Table_GoodsInRow[0];
                }
                else {
                    return ((Table_GoodsInRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Table_GoodsIn_Table_UserMessage"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRow[] GetTable_GoodsSellRows() {
                if ((this.Table.ChildRelations["FK_Table_GoodsSell_Table_UserMessage"] == null)) {
                    return new Table_GoodsSellRow[0];
                }
                else {
                    return ((Table_GoodsSellRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Table_GoodsSell_Table_UserMessage"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_VIPMessageRow : global::System.Data.DataRow {
            
            private Table_VIPMessageDataTable tableTable_VIPMessage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table_VIPMessageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_VIPMessage = ((Table_VIPMessageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIPID {
                get {
                    return ((string)(this[this.tableTable_VIPMessage.VIPIDColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.VIPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIPName {
                get {
                    return ((string)(this[this.tableTable_VIPMessage.VIPNameColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.VIPNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIPPhone {
                get {
                    return ((string)(this[this.tableTable_VIPMessage.VIPPhoneColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.VIPPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIPAddress {
                get {
                    return ((string)(this[this.tableTable_VIPMessage.VIPAddressColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.VIPAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VIPZhekou {
                get {
                    return ((decimal)(this[this.tableTable_VIPMessage.VIPZhekouColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.VIPZhekouColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Flage {
                get {
                    return ((bool)(this[this.tableTable_VIPMessage.FlageColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.FlageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIPRemrk {
                get {
                    try {
                        return ((string)(this[this.tableTable_VIPMessage.VIPRemrkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Table_VIPMessage”中列“VIPRemrk”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTable_VIPMessage.VIPRemrkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VIPBirtheDay {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_VIPMessage.VIPBirtheDayColumn]));
                }
                set {
                    this[this.tableTable_VIPMessage.VIPBirtheDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVIPRemrkNull() {
                return this.IsNull(this.tableTable_VIPMessage.VIPRemrkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVIPRemrkNull() {
                this[this.tableTable_VIPMessage.VIPRemrkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_GoodsBackRowChangeEvent : global::System.EventArgs {
            
            private Table_GoodsBackRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackRowChangeEvent(Table_GoodsBackRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsBackRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_GoodsInRowChangeEvent : global::System.EventArgs {
            
            private Table_GoodsInRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRowChangeEvent(Table_GoodsInRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsInRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_GoodsSellRowChangeEvent : global::System.EventArgs {
            
            private Table_GoodsSellRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRowChangeEvent(Table_GoodsSellRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_GoodsSellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_StorRowChangeEvent : global::System.EventArgs {
            
            private Table_StorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorRowChangeEvent(Table_StorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_StorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_SupplierRowChangeEvent : global::System.EventArgs {
            
            private Table_SupplierRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierRowChangeEvent(Table_SupplierRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_SupplierRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_UserMessageRowChangeEvent : global::System.EventArgs {
            
            private Table_UserMessageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRowChangeEvent(Table_UserMessageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_UserMessageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table_VIPMessageRowChangeEvent : global::System.EventArgs {
            
            private Table_VIPMessageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageRowChangeEvent(Table_VIPMessageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table_VIPMessageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DX男士服装进销存.DBCLDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_GoodsBackTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_GoodsBackTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_GoodsBack";
            tableMapping.ColumnMappings.Add("ThGoodsID", "ThGoodsID");
            tableMapping.ColumnMappings.Add("KcID", "KcID");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("SellID", "SellID");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ThGoodsName", "ThGoodsName");
            tableMapping.ColumnMappings.Add("ThGoodsNumber", "ThGoodsNumber");
            tableMapping.ColumnMappings.Add("ThGoodsTime", "ThGoodsTime");
            tableMapping.ColumnMappings.Add("ThGoodsPrice", "ThGoodsPrice");
            tableMapping.ColumnMappings.Add("ThRealPay", "ThRealPay");
            tableMapping.ColumnMappings.Add("ThHasPay", "ThHasPay");
            tableMapping.ColumnMappings.Add("ThRemark", "ThRemark");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_GoodsBack] WHERE (([ThGoodsID] = @Original_ThGoodsID) AND ([KcID] = @Original_KcID) AND ([GoodsID] = @Original_GoodsID) AND ([SellID] = @Original_SellID) AND ([ID] = @Original_ID) AND ([ThGoodsName] = @Original_ThGoodsName) AND ([ThGoodsNumber] = @Original_ThGoodsNumber) AND ([ThGoodsTime] = @Original_ThGoodsTime) AND ([ThGoodsPrice] = @Original_ThGoodsPrice) AND ([ThRealPay] = @Original_ThRealPay) AND ([ThHasPay] = @Original_ThHasPay))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThGoodsPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThRealPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThHasPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThHasPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_GoodsBack] ([ThGoodsID], [KcID], [GoodsID], [SellID], [ID], [ThGoodsName], [ThGoodsNumber], [ThGoodsTime], [ThGoodsPrice], [ThRealPay], [ThHasPay], [ThRemark]) VALUES (@ThGoodsID, @KcID, @GoodsID, @SellID, @ID, @ThGoodsName, @ThGoodsNumber, @ThGoodsTime, @ThGoodsPrice, @ThRealPay, @ThHasPay, @ThRemark);
SELECT ThGoodsID, KcID, GoodsID, SellID, ID, ThGoodsName, ThGoodsNumber, ThGoodsTime, ThGoodsPrice, ThRealPay, ThHasPay, ThRemark FROM Table_GoodsBack WHERE (GoodsID = @GoodsID) AND (SellID = @SellID) AND (ThGoodsID = @ThGoodsID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThGoodsPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThRealPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThHasPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThHasPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_GoodsBack] SET [ThGoodsID] = @ThGoodsID, [KcID] = @KcID, [GoodsID] = @GoodsID, [SellID] = @SellID, [ID] = @ID, [ThGoodsName] = @ThGoodsName, [ThGoodsNumber] = @ThGoodsNumber, [ThGoodsTime] = @ThGoodsTime, [ThGoodsPrice] = @ThGoodsPrice, [ThRealPay] = @ThRealPay, [ThHasPay] = @ThHasPay, [ThRemark] = @ThRemark WHERE (([ThGoodsID] = @Original_ThGoodsID) AND ([KcID] = @Original_KcID) AND ([GoodsID] = @Original_GoodsID) AND ([SellID] = @Original_SellID) AND ([ID] = @Original_ID) AND ([ThGoodsName] = @Original_ThGoodsName) AND ([ThGoodsNumber] = @Original_ThGoodsNumber) AND ([ThGoodsTime] = @Original_ThGoodsTime) AND ([ThGoodsPrice] = @Original_ThGoodsPrice) AND ([ThRealPay] = @Original_ThRealPay) AND ([ThHasPay] = @Original_ThHasPay));
SELECT ThGoodsID, KcID, GoodsID, SellID, ID, ThGoodsName, ThGoodsNumber, ThGoodsTime, ThGoodsPrice, ThRealPay, ThHasPay, ThRemark FROM Table_GoodsBack WHERE (GoodsID = @GoodsID) AND (SellID = @SellID) AND (ThGoodsID = @ThGoodsID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThGoodsPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThRealPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThHasPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThHasPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ThRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ThGoodsTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThGoodsPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThRealPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ThHasPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 0, "ThHasPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ThGoodsID, KcID, GoodsID, SellID, ID, ThGoodsName, ThGoodsNumber, ThGoodsT" +
                "ime, ThGoodsPrice, ThRealPay, ThHasPay, ThRemark FROM dbo.Table_GoodsBack";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_GoodsBackDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_GoodsBackDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_GoodsBackDataTable dataTable = new DBCLDataSet.Table_GoodsBackDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_GoodsBackDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_GoodsBack");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ThGoodsID, string Original_KcID, string Original_GoodsID, string Original_SellID, string Original_ID, string Original_ThGoodsName, int Original_ThGoodsNumber, System.DateTime Original_ThGoodsTime, decimal Original_ThGoodsPrice, decimal Original_ThRealPay, decimal Original_ThHasPay) {
            if ((Original_ThGoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_ThGoodsID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ThGoodsID));
            }
            if ((Original_KcID == null)) {
                throw new global::System.ArgumentNullException("Original_KcID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_KcID));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GoodsID));
            }
            if ((Original_SellID == null)) {
                throw new global::System.ArgumentNullException("Original_SellID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SellID));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ID));
            }
            if ((Original_ThGoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_ThGoodsName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ThGoodsName));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ThGoodsNumber));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_ThGoodsTime));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_ThGoodsPrice));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_ThRealPay));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_ThHasPay));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ThGoodsID, string KcID, string GoodsID, string SellID, string ID, string ThGoodsName, int ThGoodsNumber, System.DateTime ThGoodsTime, decimal ThGoodsPrice, decimal ThRealPay, decimal ThHasPay, string ThRemark) {
            if ((ThGoodsID == null)) {
                throw new global::System.ArgumentNullException("ThGoodsID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ThGoodsID));
            }
            if ((KcID == null)) {
                throw new global::System.ArgumentNullException("KcID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KcID));
            }
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GoodsID));
            }
            if ((SellID == null)) {
                throw new global::System.ArgumentNullException("SellID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SellID));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ID));
            }
            if ((ThGoodsName == null)) {
                throw new global::System.ArgumentNullException("ThGoodsName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ThGoodsName));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ThGoodsNumber));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(ThGoodsTime));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(ThGoodsPrice));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ThRealPay));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(ThHasPay));
            if ((ThRemark == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ThRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ThGoodsID, 
                    string KcID, 
                    string GoodsID, 
                    string SellID, 
                    string ID, 
                    string ThGoodsName, 
                    int ThGoodsNumber, 
                    System.DateTime ThGoodsTime, 
                    decimal ThGoodsPrice, 
                    decimal ThRealPay, 
                    decimal ThHasPay, 
                    string ThRemark, 
                    string Original_ThGoodsID, 
                    string Original_KcID, 
                    string Original_GoodsID, 
                    string Original_SellID, 
                    string Original_ID, 
                    string Original_ThGoodsName, 
                    int Original_ThGoodsNumber, 
                    System.DateTime Original_ThGoodsTime, 
                    decimal Original_ThGoodsPrice, 
                    decimal Original_ThRealPay, 
                    decimal Original_ThHasPay) {
            if ((ThGoodsID == null)) {
                throw new global::System.ArgumentNullException("ThGoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ThGoodsID));
            }
            if ((KcID == null)) {
                throw new global::System.ArgumentNullException("KcID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KcID));
            }
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GoodsID));
            }
            if ((SellID == null)) {
                throw new global::System.ArgumentNullException("SellID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SellID));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ID));
            }
            if ((ThGoodsName == null)) {
                throw new global::System.ArgumentNullException("ThGoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ThGoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ThGoodsNumber));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(ThGoodsTime));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(ThGoodsPrice));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(ThRealPay));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(ThHasPay));
            if ((ThRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ThRemark));
            }
            if ((Original_ThGoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_ThGoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ThGoodsID));
            }
            if ((Original_KcID == null)) {
                throw new global::System.ArgumentNullException("Original_KcID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_KcID));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_GoodsID));
            }
            if ((Original_SellID == null)) {
                throw new global::System.ArgumentNullException("Original_SellID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_SellID));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ID));
            }
            if ((Original_ThGoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_ThGoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ThGoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ThGoodsNumber));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ThGoodsTime));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_ThGoodsPrice));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_ThRealPay));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_ThHasPay));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string KcID, 
                    string ID, 
                    string ThGoodsName, 
                    int ThGoodsNumber, 
                    System.DateTime ThGoodsTime, 
                    decimal ThGoodsPrice, 
                    decimal ThRealPay, 
                    decimal ThHasPay, 
                    string ThRemark, 
                    string Original_ThGoodsID, 
                    string Original_KcID, 
                    string Original_GoodsID, 
                    string Original_SellID, 
                    string Original_ID, 
                    string Original_ThGoodsName, 
                    int Original_ThGoodsNumber, 
                    System.DateTime Original_ThGoodsTime, 
                    decimal Original_ThGoodsPrice, 
                    decimal Original_ThRealPay, 
                    decimal Original_ThHasPay) {
            return this.Update(Original_ThGoodsID, KcID, Original_GoodsID, Original_SellID, ID, ThGoodsName, ThGoodsNumber, ThGoodsTime, ThGoodsPrice, ThRealPay, ThHasPay, ThRemark, Original_ThGoodsID, Original_KcID, Original_GoodsID, Original_SellID, Original_ID, Original_ThGoodsName, Original_ThGoodsNumber, Original_ThGoodsTime, Original_ThGoodsPrice, Original_ThRealPay, Original_ThHasPay);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_GoodsInTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_GoodsInTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_GoodsIn";
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("StroName", "StroName");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("GoodsNum", "GoodsNum");
            tableMapping.ColumnMappings.Add("GoodsUnit", "GoodsUnit");
            tableMapping.ColumnMappings.Add("GoodsInPrice", "GoodsInPrice");
            tableMapping.ColumnMappings.Add("GoodsSellPrice", "GoodsSellPrice");
            tableMapping.ColumnMappings.Add("GoodsShouldPay", "GoodsShouldPay");
            tableMapping.ColumnMappings.Add("GoodsRealPay", "GoodsRealPay");
            tableMapping.ColumnMappings.Add("GoodsRemark", "GoodsRemark");
            tableMapping.ColumnMappings.Add("GoodsInDateTime", "GoodsInDateTime");
            tableMapping.ColumnMappings.Add("Flage", "Flage");
            tableMapping.ColumnMappings.Add("GoodsColor", "GoodsColor");
            tableMapping.ColumnMappings.Add("GoodsSize", "GoodsSize");
            tableMapping.ColumnMappings.Add("GoodsLeibie", "GoodsLeibie");
            tableMapping.ColumnMappings.Add("GoodsShouldJijie", "GoodsShouldJijie");
            tableMapping.ColumnMappings.Add("GoodsPinpai", "GoodsPinpai");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_GoodsIn] WHERE (([GoodsID] = @Original_GoodsID) AND ([ID] = @Original_ID) AND ([CompanyName] = @Original_CompanyName) AND ([StroName] = @Original_StroName) AND ([GoodsName] = @Original_GoodsName) AND ([GoodsNum] = @Original_GoodsNum) AND ([GoodsUnit] = @Original_GoodsUnit) AND ([GoodsInPrice] = @Original_GoodsInPrice) AND ([GoodsSellPrice] = @Original_GoodsSellPrice) AND ([GoodsShouldPay] = @Original_GoodsShouldPay) AND ([GoodsRealPay] = @Original_GoodsRealPay) AND ([GoodsInDateTime] = @Original_GoodsInDateTime) AND ([Flage] = @Original_Flage) AND ([GoodsColor] = @Original_GoodsColor) AND ([GoodsSize] = @Original_GoodsSize) AND ([GoodsLeibie] = @Original_GoodsLeibie) AND ([GoodsShouldJijie] = @Original_GoodsShouldJijie) AND ([GoodsPinpai] = @Original_GoodsPinpai))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StroName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StroName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsUnit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsInPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsInPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsSellPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsShouldPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsRealPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsInDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsInDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsSize", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsLeibie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsLeibie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsShouldJijie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsShouldJijie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsPinpai", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsPinpai", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_GoodsIn] ([GoodsID], [ID], [CompanyName], [StroName], [GoodsName], [GoodsNum], [GoodsUnit], [GoodsInPrice], [GoodsSellPrice], [GoodsShouldPay], [GoodsRealPay], [GoodsRemark], [GoodsInDateTime], [Flage], [GoodsColor], [GoodsSize], [GoodsLeibie], [GoodsShouldJijie], [GoodsPinpai]) VALUES (@GoodsID, @ID, @CompanyName, @StroName, @GoodsName, @GoodsNum, @GoodsUnit, @GoodsInPrice, @GoodsSellPrice, @GoodsShouldPay, @GoodsRealPay, @GoodsRemark, @GoodsInDateTime, @Flage, @GoodsColor, @GoodsSize, @GoodsLeibie, @GoodsShouldJijie, @GoodsPinpai);
SELECT GoodsID, ID, CompanyName, StroName, GoodsName, GoodsNum, GoodsUnit, GoodsInPrice, GoodsSellPrice, GoodsShouldPay, GoodsRealPay, GoodsRemark, GoodsInDateTime, Flage, GoodsColor, GoodsSize, GoodsLeibie, GoodsShouldJijie, GoodsPinpai FROM Table_GoodsIn WHERE (GoodsID = @GoodsID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StroName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StroName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsInPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsInPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsSellPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsShouldPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsRealPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsInDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsInDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsSize", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsLeibie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsLeibie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsShouldJijie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsShouldJijie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsPinpai", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsPinpai", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Table_GoodsIn] SET [GoodsID] = @GoodsID, [ID] = @ID, [CompanyName] " +
                "= @CompanyName, [StroName] = @StroName, [GoodsName] = @GoodsName, [GoodsNum] = @" +
                "GoodsNum, [GoodsUnit] = @GoodsUnit, [GoodsInPrice] = @GoodsInPrice, [GoodsSellPr" +
                "ice] = @GoodsSellPrice, [GoodsShouldPay] = @GoodsShouldPay, [GoodsRealPay] = @Go" +
                "odsRealPay, [GoodsRemark] = @GoodsRemark, [GoodsInDateTime] = @GoodsInDateTime, " +
                "[Flage] = @Flage, [GoodsColor] = @GoodsColor, [GoodsSize] = @GoodsSize, [GoodsLe" +
                "ibie] = @GoodsLeibie, [GoodsShouldJijie] = @GoodsShouldJijie, [GoodsPinpai] = @G" +
                "oodsPinpai WHERE (([GoodsID] = @Original_GoodsID) AND ([ID] = @Original_ID) AND " +
                "([CompanyName] = @Original_CompanyName) AND ([StroName] = @Original_StroName) AN" +
                "D ([GoodsName] = @Original_GoodsName) AND ([GoodsNum] = @Original_GoodsNum) AND " +
                "([GoodsUnit] = @Original_GoodsUnit) AND ([GoodsInPrice] = @Original_GoodsInPrice" +
                ") AND ([GoodsSellPrice] = @Original_GoodsSellPrice) AND ([GoodsShouldPay] = @Ori" +
                "ginal_GoodsShouldPay) AND ([GoodsRealPay] = @Original_GoodsRealPay) AND ([GoodsI" +
                "nDateTime] = @Original_GoodsInDateTime) AND ([Flage] = @Original_Flage) AND ([Go" +
                "odsColor] = @Original_GoodsColor) AND ([GoodsSize] = @Original_GoodsSize) AND ([" +
                "GoodsLeibie] = @Original_GoodsLeibie) AND ([GoodsShouldJijie] = @Original_GoodsS" +
                "houldJijie) AND ([GoodsPinpai] = @Original_GoodsPinpai));\r\nSELECT GoodsID, ID, C" +
                "ompanyName, StroName, GoodsName, GoodsNum, GoodsUnit, GoodsInPrice, GoodsSellPri" +
                "ce, GoodsShouldPay, GoodsRealPay, GoodsRemark, GoodsInDateTime, Flage, GoodsColo" +
                "r, GoodsSize, GoodsLeibie, GoodsShouldJijie, GoodsPinpai FROM Table_GoodsIn WHER" +
                "E (GoodsID = @GoodsID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StroName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StroName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsInPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsInPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsSellPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsShouldPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsRealPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsInDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsInDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsSize", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsLeibie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsLeibie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsShouldJijie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsShouldJijie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsPinpai", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsPinpai", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StroName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StroName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsUnit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsInPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsInPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsSellPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsShouldPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GoodsRealPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsInDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsInDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsSize", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsLeibie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsLeibie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsShouldJijie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsShouldJijie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsPinpai", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsPinpai", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT GoodsID, ID, CompanyName, StroName, GoodsName, GoodsNum, GoodsUnit, GoodsInPrice, GoodsSellPrice, GoodsShouldPay, GoodsRealPay, GoodsRemark, GoodsInDateTime, Flage, GoodsColor, GoodsSize, GoodsLeibie, GoodsShouldJijie, GoodsPinpai FROM dbo.Table_GoodsIn";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_GoodsInDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_GoodsInDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_GoodsInDataTable dataTable = new DBCLDataSet.Table_GoodsInDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_GoodsInDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_GoodsIn");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_GoodsID, 
                    string Original_ID, 
                    string Original_CompanyName, 
                    string Original_StroName, 
                    string Original_GoodsName, 
                    int Original_GoodsNum, 
                    string Original_GoodsUnit, 
                    decimal Original_GoodsInPrice, 
                    decimal Original_GoodsSellPrice, 
                    decimal Original_GoodsShouldPay, 
                    decimal Original_GoodsRealPay, 
                    System.DateTime Original_GoodsInDateTime, 
                    bool Original_Flage, 
                    string Original_GoodsColor, 
                    string Original_GoodsSize, 
                    string Original_GoodsLeibie, 
                    string Original_GoodsShouldJijie, 
                    string Original_GoodsPinpai) {
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_GoodsID));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ID));
            }
            if ((Original_CompanyName == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CompanyName));
            }
            if ((Original_StroName == null)) {
                throw new global::System.ArgumentNullException("Original_StroName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_StroName));
            }
            if ((Original_GoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GoodsName));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_GoodsNum));
            if ((Original_GoodsUnit == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsUnit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GoodsUnit));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_GoodsInPrice));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_GoodsSellPrice));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_GoodsShouldPay));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_GoodsRealPay));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_GoodsInDateTime));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_Flage));
            if ((Original_GoodsColor == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsColor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_GoodsColor));
            }
            if ((Original_GoodsSize == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsSize");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_GoodsSize));
            }
            if ((Original_GoodsLeibie == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsLeibie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_GoodsLeibie));
            }
            if ((Original_GoodsShouldJijie == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsShouldJijie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_GoodsShouldJijie));
            }
            if ((Original_GoodsPinpai == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsPinpai");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_GoodsPinpai));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string GoodsID, 
                    string ID, 
                    string CompanyName, 
                    string StroName, 
                    string GoodsName, 
                    int GoodsNum, 
                    string GoodsUnit, 
                    decimal GoodsInPrice, 
                    decimal GoodsSellPrice, 
                    decimal GoodsShouldPay, 
                    decimal GoodsRealPay, 
                    string GoodsRemark, 
                    System.DateTime GoodsInDateTime, 
                    bool Flage, 
                    string GoodsColor, 
                    string GoodsSize, 
                    string GoodsLeibie, 
                    string GoodsShouldJijie, 
                    string GoodsPinpai) {
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GoodsID));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ID));
            }
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CompanyName));
            }
            if ((StroName == null)) {
                throw new global::System.ArgumentNullException("StroName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(StroName));
            }
            if ((GoodsName == null)) {
                throw new global::System.ArgumentNullException("GoodsName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GoodsName));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(GoodsNum));
            if ((GoodsUnit == null)) {
                throw new global::System.ArgumentNullException("GoodsUnit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(GoodsUnit));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(GoodsInPrice));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(GoodsSellPrice));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(GoodsShouldPay));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(GoodsRealPay));
            if ((GoodsRemark == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(GoodsRemark));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(GoodsInDateTime));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(Flage));
            if ((GoodsColor == null)) {
                throw new global::System.ArgumentNullException("GoodsColor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(GoodsColor));
            }
            if ((GoodsSize == null)) {
                throw new global::System.ArgumentNullException("GoodsSize");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(GoodsSize));
            }
            if ((GoodsLeibie == null)) {
                throw new global::System.ArgumentNullException("GoodsLeibie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(GoodsLeibie));
            }
            if ((GoodsShouldJijie == null)) {
                throw new global::System.ArgumentNullException("GoodsShouldJijie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(GoodsShouldJijie));
            }
            if ((GoodsPinpai == null)) {
                throw new global::System.ArgumentNullException("GoodsPinpai");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(GoodsPinpai));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string GoodsID, 
                    string ID, 
                    string CompanyName, 
                    string StroName, 
                    string GoodsName, 
                    int GoodsNum, 
                    string GoodsUnit, 
                    decimal GoodsInPrice, 
                    decimal GoodsSellPrice, 
                    decimal GoodsShouldPay, 
                    decimal GoodsRealPay, 
                    string GoodsRemark, 
                    System.DateTime GoodsInDateTime, 
                    bool Flage, 
                    string GoodsColor, 
                    string GoodsSize, 
                    string GoodsLeibie, 
                    string GoodsShouldJijie, 
                    string GoodsPinpai, 
                    string Original_GoodsID, 
                    string Original_ID, 
                    string Original_CompanyName, 
                    string Original_StroName, 
                    string Original_GoodsName, 
                    int Original_GoodsNum, 
                    string Original_GoodsUnit, 
                    decimal Original_GoodsInPrice, 
                    decimal Original_GoodsSellPrice, 
                    decimal Original_GoodsShouldPay, 
                    decimal Original_GoodsRealPay, 
                    System.DateTime Original_GoodsInDateTime, 
                    bool Original_Flage, 
                    string Original_GoodsColor, 
                    string Original_GoodsSize, 
                    string Original_GoodsLeibie, 
                    string Original_GoodsShouldJijie, 
                    string Original_GoodsPinpai) {
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(GoodsID));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ID));
            }
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CompanyName));
            }
            if ((StroName == null)) {
                throw new global::System.ArgumentNullException("StroName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(StroName));
            }
            if ((GoodsName == null)) {
                throw new global::System.ArgumentNullException("GoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(GoodsNum));
            if ((GoodsUnit == null)) {
                throw new global::System.ArgumentNullException("GoodsUnit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(GoodsUnit));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(GoodsInPrice));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(GoodsSellPrice));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(GoodsShouldPay));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(GoodsRealPay));
            if ((GoodsRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(GoodsRemark));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(GoodsInDateTime));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Flage));
            if ((GoodsColor == null)) {
                throw new global::System.ArgumentNullException("GoodsColor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(GoodsColor));
            }
            if ((GoodsSize == null)) {
                throw new global::System.ArgumentNullException("GoodsSize");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(GoodsSize));
            }
            if ((GoodsLeibie == null)) {
                throw new global::System.ArgumentNullException("GoodsLeibie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(GoodsLeibie));
            }
            if ((GoodsShouldJijie == null)) {
                throw new global::System.ArgumentNullException("GoodsShouldJijie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(GoodsShouldJijie));
            }
            if ((GoodsPinpai == null)) {
                throw new global::System.ArgumentNullException("GoodsPinpai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(GoodsPinpai));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_GoodsID));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ID));
            }
            if ((Original_CompanyName == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_CompanyName));
            }
            if ((Original_StroName == null)) {
                throw new global::System.ArgumentNullException("Original_StroName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_StroName));
            }
            if ((Original_GoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_GoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_GoodsNum));
            if ((Original_GoodsUnit == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsUnit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_GoodsUnit));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_GoodsInPrice));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_GoodsSellPrice));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_GoodsShouldPay));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_GoodsRealPay));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_GoodsInDateTime));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_Flage));
            if ((Original_GoodsColor == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsColor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_GoodsColor));
            }
            if ((Original_GoodsSize == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsSize");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_GoodsSize));
            }
            if ((Original_GoodsLeibie == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsLeibie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_GoodsLeibie));
            }
            if ((Original_GoodsShouldJijie == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsShouldJijie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_GoodsShouldJijie));
            }
            if ((Original_GoodsPinpai == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsPinpai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_GoodsPinpai));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID, 
                    string CompanyName, 
                    string StroName, 
                    string GoodsName, 
                    int GoodsNum, 
                    string GoodsUnit, 
                    decimal GoodsInPrice, 
                    decimal GoodsSellPrice, 
                    decimal GoodsShouldPay, 
                    decimal GoodsRealPay, 
                    string GoodsRemark, 
                    System.DateTime GoodsInDateTime, 
                    bool Flage, 
                    string GoodsColor, 
                    string GoodsSize, 
                    string GoodsLeibie, 
                    string GoodsShouldJijie, 
                    string GoodsPinpai, 
                    string Original_GoodsID, 
                    string Original_ID, 
                    string Original_CompanyName, 
                    string Original_StroName, 
                    string Original_GoodsName, 
                    int Original_GoodsNum, 
                    string Original_GoodsUnit, 
                    decimal Original_GoodsInPrice, 
                    decimal Original_GoodsSellPrice, 
                    decimal Original_GoodsShouldPay, 
                    decimal Original_GoodsRealPay, 
                    System.DateTime Original_GoodsInDateTime, 
                    bool Original_Flage, 
                    string Original_GoodsColor, 
                    string Original_GoodsSize, 
                    string Original_GoodsLeibie, 
                    string Original_GoodsShouldJijie, 
                    string Original_GoodsPinpai) {
            return this.Update(Original_GoodsID, ID, CompanyName, StroName, GoodsName, GoodsNum, GoodsUnit, GoodsInPrice, GoodsSellPrice, GoodsShouldPay, GoodsRealPay, GoodsRemark, GoodsInDateTime, Flage, GoodsColor, GoodsSize, GoodsLeibie, GoodsShouldJijie, GoodsPinpai, Original_GoodsID, Original_ID, Original_CompanyName, Original_StroName, Original_GoodsName, Original_GoodsNum, Original_GoodsUnit, Original_GoodsInPrice, Original_GoodsSellPrice, Original_GoodsShouldPay, Original_GoodsRealPay, Original_GoodsInDateTime, Original_Flage, Original_GoodsColor, Original_GoodsSize, Original_GoodsLeibie, Original_GoodsShouldJijie, Original_GoodsPinpai);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_GoodsSellTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_GoodsSellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_GoodsSell";
            tableMapping.ColumnMappings.Add("SellID", "SellID");
            tableMapping.ColumnMappings.Add("KcID", "KcID");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("GoodsName", "GoodsName");
            tableMapping.ColumnMappings.Add("SellGoodsNumber", "SellGoodsNumber");
            tableMapping.ColumnMappings.Add("SellGoodsTime", "SellGoodsTime");
            tableMapping.ColumnMappings.Add("SellPrice", "SellPrice");
            tableMapping.ColumnMappings.Add("SellShouldPay", "SellShouldPay");
            tableMapping.ColumnMappings.Add("SellRealPay", "SellRealPay");
            tableMapping.ColumnMappings.Add("SellRemark", "SellRemark");
            tableMapping.ColumnMappings.Add("Sellflage", "Sellflage");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_GoodsSell] WHERE (([SellID] = @Original_SellID) AND ([KcID] = @Original_KcID) AND ([GoodsID] = @Original_GoodsID) AND ([ID] = @Original_ID) AND ([GoodsName] = @Original_GoodsName) AND ([SellGoodsNumber] = @Original_SellGoodsNumber) AND ([SellGoodsTime] = @Original_SellGoodsTime) AND ([SellPrice] = @Original_SellPrice) AND ([SellShouldPay] = @Original_SellShouldPay) AND ([SellRealPay] = @Original_SellRealPay) AND ((@IsNull_Sellflage = 1 AND [Sellflage] IS NULL) OR ([Sellflage] = @Original_Sellflage)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellShouldPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellRealPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sellflage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sellflage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sellflage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sellflage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_GoodsSell] ([SellID], [KcID], [GoodsID], [ID], [GoodsName], [SellGoodsNumber], [SellGoodsTime], [SellPrice], [SellShouldPay], [SellRealPay], [SellRemark], [Sellflage]) VALUES (@SellID, @KcID, @GoodsID, @ID, @GoodsName, @SellGoodsNumber, @SellGoodsTime, @SellPrice, @SellShouldPay, @SellRealPay, @SellRemark, @Sellflage);
SELECT SellID, KcID, GoodsID, ID, GoodsName, SellGoodsNumber, SellGoodsTime, SellPrice, SellShouldPay, SellRealPay, SellRemark, Sellflage FROM Table_GoodsSell WHERE (GoodsName = @GoodsName) AND (SellID = @SellID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellShouldPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellRealPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sellflage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sellflage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_GoodsSell] SET [SellID] = @SellID, [KcID] = @KcID, [GoodsID] = @GoodsID, [ID] = @ID, [GoodsName] = @GoodsName, [SellGoodsNumber] = @SellGoodsNumber, [SellGoodsTime] = @SellGoodsTime, [SellPrice] = @SellPrice, [SellShouldPay] = @SellShouldPay, [SellRealPay] = @SellRealPay, [SellRemark] = @SellRemark, [Sellflage] = @Sellflage WHERE (([SellID] = @Original_SellID) AND ([KcID] = @Original_KcID) AND ([GoodsID] = @Original_GoodsID) AND ([ID] = @Original_ID) AND ([GoodsName] = @Original_GoodsName) AND ([SellGoodsNumber] = @Original_SellGoodsNumber) AND ([SellGoodsTime] = @Original_SellGoodsTime) AND ([SellPrice] = @Original_SellPrice) AND ([SellShouldPay] = @Original_SellShouldPay) AND ([SellRealPay] = @Original_SellRealPay) AND ((@IsNull_Sellflage = 1 AND [Sellflage] IS NULL) OR ([Sellflage] = @Original_Sellflage)));
SELECT SellID, KcID, GoodsID, ID, GoodsName, SellGoodsNumber, SellGoodsTime, SellPrice, SellShouldPay, SellRealPay, SellRemark, Sellflage FROM Table_GoodsSell WHERE (GoodsName = @GoodsName) AND (SellID = @SellID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellShouldPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellRealPay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sellflage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sellflage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellGoodsNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellGoodsTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellGoodsTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellShouldPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellShouldPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellRealPay", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "SellRealPay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sellflage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sellflage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sellflage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sellflage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SellID, KcID, GoodsID, ID, GoodsName, SellGoodsNumber, SellGoodsTime, Sell" +
                "Price, SellShouldPay, SellRealPay, SellRemark, Sellflage FROM dbo.Table_GoodsSel" +
                "l";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_GoodsSellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_GoodsSellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_GoodsSellDataTable dataTable = new DBCLDataSet.Table_GoodsSellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_GoodsSellDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_GoodsSell");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SellID, string Original_KcID, string Original_GoodsID, string Original_ID, string Original_GoodsName, int Original_SellGoodsNumber, System.DateTime Original_SellGoodsTime, decimal Original_SellPrice, decimal Original_SellShouldPay, decimal Original_SellRealPay, global::System.Nullable<bool> Original_Sellflage) {
            if ((Original_SellID == null)) {
                throw new global::System.ArgumentNullException("Original_SellID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SellID));
            }
            if ((Original_KcID == null)) {
                throw new global::System.ArgumentNullException("Original_KcID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_KcID));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GoodsID));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ID));
            }
            if ((Original_GoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GoodsName));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_SellGoodsNumber));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_SellGoodsTime));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_SellPrice));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_SellShouldPay));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_SellRealPay));
            if ((Original_Sellflage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_Sellflage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SellID, string KcID, string GoodsID, string ID, string GoodsName, int SellGoodsNumber, System.DateTime SellGoodsTime, decimal SellPrice, decimal SellShouldPay, decimal SellRealPay, string SellRemark, global::System.Nullable<bool> Sellflage) {
            if ((SellID == null)) {
                throw new global::System.ArgumentNullException("SellID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SellID));
            }
            if ((KcID == null)) {
                throw new global::System.ArgumentNullException("KcID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KcID));
            }
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GoodsID));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ID));
            }
            if ((GoodsName == null)) {
                throw new global::System.ArgumentNullException("GoodsName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GoodsName));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(SellGoodsNumber));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(SellGoodsTime));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(SellPrice));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(SellShouldPay));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(SellRealPay));
            if ((SellRemark == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SellRemark));
            }
            if ((Sellflage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Sellflage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SellID, 
                    string KcID, 
                    string GoodsID, 
                    string ID, 
                    string GoodsName, 
                    int SellGoodsNumber, 
                    System.DateTime SellGoodsTime, 
                    decimal SellPrice, 
                    decimal SellShouldPay, 
                    decimal SellRealPay, 
                    string SellRemark, 
                    global::System.Nullable<bool> Sellflage, 
                    string Original_SellID, 
                    string Original_KcID, 
                    string Original_GoodsID, 
                    string Original_ID, 
                    string Original_GoodsName, 
                    int Original_SellGoodsNumber, 
                    System.DateTime Original_SellGoodsTime, 
                    decimal Original_SellPrice, 
                    decimal Original_SellShouldPay, 
                    decimal Original_SellRealPay, 
                    global::System.Nullable<bool> Original_Sellflage) {
            if ((SellID == null)) {
                throw new global::System.ArgumentNullException("SellID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SellID));
            }
            if ((KcID == null)) {
                throw new global::System.ArgumentNullException("KcID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KcID));
            }
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GoodsID));
            }
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ID));
            }
            if ((GoodsName == null)) {
                throw new global::System.ArgumentNullException("GoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(SellGoodsNumber));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(SellGoodsTime));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(SellPrice));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(SellShouldPay));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(SellRealPay));
            if ((SellRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SellRemark));
            }
            if ((Sellflage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Sellflage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_SellID == null)) {
                throw new global::System.ArgumentNullException("Original_SellID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_SellID));
            }
            if ((Original_KcID == null)) {
                throw new global::System.ArgumentNullException("Original_KcID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_KcID));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_GoodsID));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ID));
            }
            if ((Original_GoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_GoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_SellGoodsNumber));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_SellGoodsTime));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_SellPrice));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_SellShouldPay));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_SellRealPay));
            if ((Original_Sellflage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_Sellflage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string KcID, 
                    string GoodsID, 
                    string ID, 
                    int SellGoodsNumber, 
                    System.DateTime SellGoodsTime, 
                    decimal SellPrice, 
                    decimal SellShouldPay, 
                    decimal SellRealPay, 
                    string SellRemark, 
                    global::System.Nullable<bool> Sellflage, 
                    string Original_SellID, 
                    string Original_KcID, 
                    string Original_GoodsID, 
                    string Original_ID, 
                    string Original_GoodsName, 
                    int Original_SellGoodsNumber, 
                    System.DateTime Original_SellGoodsTime, 
                    decimal Original_SellPrice, 
                    decimal Original_SellShouldPay, 
                    decimal Original_SellRealPay, 
                    global::System.Nullable<bool> Original_Sellflage) {
            return this.Update(Original_SellID, KcID, GoodsID, ID, Original_GoodsName, SellGoodsNumber, SellGoodsTime, SellPrice, SellShouldPay, SellRealPay, SellRemark, Sellflage, Original_SellID, Original_KcID, Original_GoodsID, Original_ID, Original_GoodsName, Original_SellGoodsNumber, Original_SellGoodsTime, Original_SellPrice, Original_SellShouldPay, Original_SellRealPay, Original_Sellflage);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_StorTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_StorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_Stor";
            tableMapping.ColumnMappings.Add("KcID", "KcID");
            tableMapping.ColumnMappings.Add("GoodsID", "GoodsID");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("KcName", "KcName");
            tableMapping.ColumnMappings.Add("KcGoodsName", "KcGoodsName");
            tableMapping.ColumnMappings.Add("KcNumber", "KcNumber");
            tableMapping.ColumnMappings.Add("KcJingGaoNumber", "KcJingGaoNumber");
            tableMapping.ColumnMappings.Add("KcDataTime", "KcDataTime");
            tableMapping.ColumnMappings.Add("KcUnit", "KcUnit");
            tableMapping.ColumnMappings.Add("KcGoodsPrice", "KcGoodsPrice");
            tableMapping.ColumnMappings.Add("KcGoodsSellPrice", "KcGoodsSellPrice");
            tableMapping.ColumnMappings.Add("KcRemark", "KcRemark");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_Stor] WHERE (([KcID] = @Original_KcID) AND ([GoodsID] = @Original_GoodsID) AND ([CompanyName] = @Original_CompanyName) AND ([KcName] = @Original_KcName) AND ([KcGoodsName] = @Original_KcGoodsName) AND ([KcNumber] = @Original_KcNumber) AND ((@IsNull_KcJingGaoNumber = 1 AND [KcJingGaoNumber] IS NULL) OR ([KcJingGaoNumber] = @Original_KcJingGaoNumber)) AND ([KcDataTime] = @Original_KcDataTime) AND ([KcUnit] = @Original_KcUnit) AND ([KcGoodsPrice] = @Original_KcGoodsPrice) AND ([KcGoodsSellPrice] = @Original_KcGoodsSellPrice))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcGoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KcJingGaoNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcJingGaoNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcJingGaoNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcJingGaoNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcDataTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcDataTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcUnit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcGoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsSellPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_Stor] ([KcID], [GoodsID], [CompanyName], [KcName], [KcGoodsName], [KcNumber], [KcJingGaoNumber], [KcDataTime], [KcUnit], [KcGoodsPrice], [KcGoodsSellPrice], [KcRemark]) VALUES (@KcID, @GoodsID, @CompanyName, @KcName, @KcGoodsName, @KcNumber, @KcJingGaoNumber, @KcDataTime, @KcUnit, @KcGoodsPrice, @KcGoodsSellPrice, @KcRemark);
SELECT KcID, GoodsID, CompanyName, KcName, KcGoodsName, KcNumber, KcJingGaoNumber, KcDataTime, KcUnit, KcGoodsPrice, KcGoodsSellPrice, KcRemark FROM Table_Stor WHERE (GoodsID = @GoodsID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcGoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcJingGaoNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcJingGaoNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcDataTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcDataTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcGoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsSellPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_Stor] SET [KcID] = @KcID, [GoodsID] = @GoodsID, [CompanyName] = @CompanyName, [KcName] = @KcName, [KcGoodsName] = @KcGoodsName, [KcNumber] = @KcNumber, [KcJingGaoNumber] = @KcJingGaoNumber, [KcDataTime] = @KcDataTime, [KcUnit] = @KcUnit, [KcGoodsPrice] = @KcGoodsPrice, [KcGoodsSellPrice] = @KcGoodsSellPrice, [KcRemark] = @KcRemark WHERE (([KcID] = @Original_KcID) AND ([GoodsID] = @Original_GoodsID) AND ([CompanyName] = @Original_CompanyName) AND ([KcName] = @Original_KcName) AND ([KcGoodsName] = @Original_KcGoodsName) AND ([KcNumber] = @Original_KcNumber) AND ((@IsNull_KcJingGaoNumber = 1 AND [KcJingGaoNumber] IS NULL) OR ([KcJingGaoNumber] = @Original_KcJingGaoNumber)) AND ([KcDataTime] = @Original_KcDataTime) AND ([KcUnit] = @Original_KcUnit) AND ([KcGoodsPrice] = @Original_KcGoodsPrice) AND ([KcGoodsSellPrice] = @Original_KcGoodsSellPrice));
SELECT KcID, GoodsID, CompanyName, KcName, KcGoodsName, KcNumber, KcJingGaoNumber, KcDataTime, KcUnit, KcGoodsPrice, KcGoodsSellPrice, KcRemark FROM Table_Stor WHERE (GoodsID = @GoodsID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcGoodsName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcJingGaoNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcJingGaoNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcDataTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcDataTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcGoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsSellPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KcRemark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GoodsID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GoodsID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcGoodsName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcGoodsName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KcJingGaoNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcJingGaoNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcJingGaoNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcJingGaoNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcDataTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcDataTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcUnit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KcUnit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcGoodsPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KcGoodsSellPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "KcGoodsSellPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT KcID, GoodsID, CompanyName, KcName, KcGoodsName, KcNumber, KcJingGaoNumber" +
                ", KcDataTime, KcUnit, KcGoodsPrice, KcGoodsSellPrice, KcRemark FROM dbo.Table_St" +
                "or";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_StorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_StorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_StorDataTable dataTable = new DBCLDataSet.Table_StorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_StorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_Stor");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_KcID, string Original_GoodsID, string Original_CompanyName, string Original_KcName, string Original_KcGoodsName, int Original_KcNumber, global::System.Nullable<int> Original_KcJingGaoNumber, System.DateTime Original_KcDataTime, string Original_KcUnit, decimal Original_KcGoodsPrice, decimal Original_KcGoodsSellPrice) {
            if ((Original_KcID == null)) {
                throw new global::System.ArgumentNullException("Original_KcID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_KcID));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_GoodsID));
            }
            if ((Original_CompanyName == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CompanyName));
            }
            if ((Original_KcName == null)) {
                throw new global::System.ArgumentNullException("Original_KcName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KcName));
            }
            if ((Original_KcGoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_KcGoodsName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KcGoodsName));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_KcNumber));
            if ((Original_KcJingGaoNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_KcJingGaoNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_KcDataTime));
            if ((Original_KcUnit == null)) {
                throw new global::System.ArgumentNullException("Original_KcUnit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_KcUnit));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_KcGoodsPrice));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_KcGoodsSellPrice));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string KcID, string GoodsID, string CompanyName, string KcName, string KcGoodsName, int KcNumber, global::System.Nullable<int> KcJingGaoNumber, System.DateTime KcDataTime, string KcUnit, decimal KcGoodsPrice, decimal KcGoodsSellPrice, string KcRemark) {
            if ((KcID == null)) {
                throw new global::System.ArgumentNullException("KcID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KcID));
            }
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GoodsID));
            }
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CompanyName));
            }
            if ((KcName == null)) {
                throw new global::System.ArgumentNullException("KcName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KcName));
            }
            if ((KcGoodsName == null)) {
                throw new global::System.ArgumentNullException("KcGoodsName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KcGoodsName));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(KcNumber));
            if ((KcJingGaoNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(KcJingGaoNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(KcDataTime));
            if ((KcUnit == null)) {
                throw new global::System.ArgumentNullException("KcUnit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(KcUnit));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(KcGoodsPrice));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(KcGoodsSellPrice));
            if ((KcRemark == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KcRemark));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string KcID, 
                    string GoodsID, 
                    string CompanyName, 
                    string KcName, 
                    string KcGoodsName, 
                    int KcNumber, 
                    global::System.Nullable<int> KcJingGaoNumber, 
                    System.DateTime KcDataTime, 
                    string KcUnit, 
                    decimal KcGoodsPrice, 
                    decimal KcGoodsSellPrice, 
                    string KcRemark, 
                    string Original_KcID, 
                    string Original_GoodsID, 
                    string Original_CompanyName, 
                    string Original_KcName, 
                    string Original_KcGoodsName, 
                    int Original_KcNumber, 
                    global::System.Nullable<int> Original_KcJingGaoNumber, 
                    System.DateTime Original_KcDataTime, 
                    string Original_KcUnit, 
                    decimal Original_KcGoodsPrice, 
                    decimal Original_KcGoodsSellPrice) {
            if ((KcID == null)) {
                throw new global::System.ArgumentNullException("KcID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KcID));
            }
            if ((GoodsID == null)) {
                throw new global::System.ArgumentNullException("GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GoodsID));
            }
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CompanyName));
            }
            if ((KcName == null)) {
                throw new global::System.ArgumentNullException("KcName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KcName));
            }
            if ((KcGoodsName == null)) {
                throw new global::System.ArgumentNullException("KcGoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KcGoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(KcNumber));
            if ((KcJingGaoNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(KcJingGaoNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(KcDataTime));
            if ((KcUnit == null)) {
                throw new global::System.ArgumentNullException("KcUnit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(KcUnit));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(KcGoodsPrice));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(KcGoodsSellPrice));
            if ((KcRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KcRemark));
            }
            if ((Original_KcID == null)) {
                throw new global::System.ArgumentNullException("Original_KcID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_KcID));
            }
            if ((Original_GoodsID == null)) {
                throw new global::System.ArgumentNullException("Original_GoodsID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_GoodsID));
            }
            if ((Original_CompanyName == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CompanyName));
            }
            if ((Original_KcName == null)) {
                throw new global::System.ArgumentNullException("Original_KcName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_KcName));
            }
            if ((Original_KcGoodsName == null)) {
                throw new global::System.ArgumentNullException("Original_KcGoodsName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_KcGoodsName));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_KcNumber));
            if ((Original_KcJingGaoNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_KcJingGaoNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_KcDataTime));
            if ((Original_KcUnit == null)) {
                throw new global::System.ArgumentNullException("Original_KcUnit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_KcUnit));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_KcGoodsPrice));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_KcGoodsSellPrice));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string KcID, 
                    string CompanyName, 
                    string KcName, 
                    string KcGoodsName, 
                    int KcNumber, 
                    global::System.Nullable<int> KcJingGaoNumber, 
                    System.DateTime KcDataTime, 
                    string KcUnit, 
                    decimal KcGoodsPrice, 
                    decimal KcGoodsSellPrice, 
                    string KcRemark, 
                    string Original_KcID, 
                    string Original_GoodsID, 
                    string Original_CompanyName, 
                    string Original_KcName, 
                    string Original_KcGoodsName, 
                    int Original_KcNumber, 
                    global::System.Nullable<int> Original_KcJingGaoNumber, 
                    System.DateTime Original_KcDataTime, 
                    string Original_KcUnit, 
                    decimal Original_KcGoodsPrice, 
                    decimal Original_KcGoodsSellPrice) {
            return this.Update(KcID, Original_GoodsID, CompanyName, KcName, KcGoodsName, KcNumber, KcJingGaoNumber, KcDataTime, KcUnit, KcGoodsPrice, KcGoodsSellPrice, KcRemark, Original_KcID, Original_GoodsID, Original_CompanyName, Original_KcName, Original_KcGoodsName, Original_KcNumber, Original_KcJingGaoNumber, Original_KcDataTime, Original_KcUnit, Original_KcGoodsPrice, Original_KcGoodsSellPrice);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_SupplierTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_SupplierTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_Supplier";
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("CompanyDirector", "CompanyDirector");
            tableMapping.ColumnMappings.Add("CompanyPhone", "CompanyPhone");
            tableMapping.ColumnMappings.Add("CompanyAddress", "CompanyAddress");
            tableMapping.ColumnMappings.Add("CompanyReMark", "CompanyReMark");
            tableMapping.ColumnMappings.Add("InDateTime", "InDateTime");
            tableMapping.ColumnMappings.Add("IsUsed", "IsUsed");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_Supplier] WHERE (([CompanyID] = @Original_CompanyID) AND ([CompanyName] = @Original_CompanyName) AND ([CompanyDirector] = @Original_CompanyDirector) AND ([CompanyPhone] = @Original_CompanyPhone) AND ([CompanyAddress] = @Original_CompanyAddress) AND ([InDateTime] = @Original_InDateTime) AND ([IsUsed] = @Original_IsUsed))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyDirector", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyDirector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsUsed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_Supplier] ([CompanyID], [CompanyName], [CompanyDirector], [CompanyPhone], [CompanyAddress], [CompanyReMark], [InDateTime], [IsUsed]) VALUES (@CompanyID, @CompanyName, @CompanyDirector, @CompanyPhone, @CompanyAddress, @CompanyReMark, @InDateTime, @IsUsed);
SELECT CompanyID, CompanyName, CompanyDirector, CompanyPhone, CompanyAddress, CompanyReMark, InDateTime, IsUsed FROM Table_Supplier WHERE (CompanyID = @CompanyID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyDirector", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyDirector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyReMark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyReMark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsUsed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_Supplier] SET [CompanyID] = @CompanyID, [CompanyName] = @CompanyName, [CompanyDirector] = @CompanyDirector, [CompanyPhone] = @CompanyPhone, [CompanyAddress] = @CompanyAddress, [CompanyReMark] = @CompanyReMark, [InDateTime] = @InDateTime, [IsUsed] = @IsUsed WHERE (([CompanyID] = @Original_CompanyID) AND ([CompanyName] = @Original_CompanyName) AND ([CompanyDirector] = @Original_CompanyDirector) AND ([CompanyPhone] = @Original_CompanyPhone) AND ([CompanyAddress] = @Original_CompanyAddress) AND ([InDateTime] = @Original_InDateTime) AND ([IsUsed] = @Original_IsUsed));
SELECT CompanyID, CompanyName, CompanyDirector, CompanyPhone, CompanyAddress, CompanyReMark, InDateTime, IsUsed FROM Table_Supplier WHERE (CompanyID = @CompanyID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyDirector", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyDirector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyReMark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyReMark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsUsed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyDirector", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyDirector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InDateTime", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsUsed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUsed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CompanyID, CompanyName, CompanyDirector, CompanyPhone, CompanyAddress, Com" +
                "panyReMark, InDateTime, IsUsed FROM dbo.Table_Supplier";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_SupplierDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_SupplierDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_SupplierDataTable dataTable = new DBCLDataSet.Table_SupplierDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_SupplierDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_Supplier");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CompanyID, string Original_CompanyName, string Original_CompanyDirector, string Original_CompanyPhone, string Original_CompanyAddress, System.DateTime Original_InDateTime, bool Original_IsUsed) {
            if ((Original_CompanyID == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CompanyID));
            }
            if ((Original_CompanyName == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CompanyName));
            }
            if ((Original_CompanyDirector == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyDirector");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CompanyDirector));
            }
            if ((Original_CompanyPhone == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyPhone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CompanyPhone));
            }
            if ((Original_CompanyAddress == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CompanyAddress));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_InDateTime));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_IsUsed));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CompanyID, string CompanyName, string CompanyDirector, string CompanyPhone, string CompanyAddress, string CompanyReMark, System.DateTime InDateTime, bool IsUsed) {
            if ((CompanyID == null)) {
                throw new global::System.ArgumentNullException("CompanyID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CompanyID));
            }
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CompanyName));
            }
            if ((CompanyDirector == null)) {
                throw new global::System.ArgumentNullException("CompanyDirector");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CompanyDirector));
            }
            if ((CompanyPhone == null)) {
                throw new global::System.ArgumentNullException("CompanyPhone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CompanyPhone));
            }
            if ((CompanyAddress == null)) {
                throw new global::System.ArgumentNullException("CompanyAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CompanyAddress));
            }
            if ((CompanyReMark == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CompanyReMark));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(InDateTime));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(IsUsed));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CompanyID, string CompanyName, string CompanyDirector, string CompanyPhone, string CompanyAddress, string CompanyReMark, System.DateTime InDateTime, bool IsUsed, string Original_CompanyID, string Original_CompanyName, string Original_CompanyDirector, string Original_CompanyPhone, string Original_CompanyAddress, System.DateTime Original_InDateTime, bool Original_IsUsed) {
            if ((CompanyID == null)) {
                throw new global::System.ArgumentNullException("CompanyID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CompanyID));
            }
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CompanyName));
            }
            if ((CompanyDirector == null)) {
                throw new global::System.ArgumentNullException("CompanyDirector");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CompanyDirector));
            }
            if ((CompanyPhone == null)) {
                throw new global::System.ArgumentNullException("CompanyPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CompanyPhone));
            }
            if ((CompanyAddress == null)) {
                throw new global::System.ArgumentNullException("CompanyAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CompanyAddress));
            }
            if ((CompanyReMark == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CompanyReMark));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(InDateTime));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(IsUsed));
            if ((Original_CompanyID == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CompanyID));
            }
            if ((Original_CompanyName == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_CompanyName));
            }
            if ((Original_CompanyDirector == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyDirector");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CompanyDirector));
            }
            if ((Original_CompanyPhone == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_CompanyPhone));
            }
            if ((Original_CompanyAddress == null)) {
                throw new global::System.ArgumentNullException("Original_CompanyAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_CompanyAddress));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_InDateTime));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Original_IsUsed));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CompanyName, string CompanyDirector, string CompanyPhone, string CompanyAddress, string CompanyReMark, System.DateTime InDateTime, bool IsUsed, string Original_CompanyID, string Original_CompanyName, string Original_CompanyDirector, string Original_CompanyPhone, string Original_CompanyAddress, System.DateTime Original_InDateTime, bool Original_IsUsed) {
            return this.Update(Original_CompanyID, CompanyName, CompanyDirector, CompanyPhone, CompanyAddress, CompanyReMark, InDateTime, IsUsed, Original_CompanyID, Original_CompanyName, Original_CompanyDirector, Original_CompanyPhone, Original_CompanyAddress, Original_InDateTime, Original_IsUsed);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_UserMessageTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_UserMessageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_UserMessage";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("LoginName", "LoginName");
            tableMapping.ColumnMappings.Add("LoginPassWord", "LoginPassWord");
            tableMapping.ColumnMappings.Add("LoginPassWord2", "LoginPassWord2");
            tableMapping.ColumnMappings.Add("RealName", "RealName");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("Level", "Level");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("ReMark", "ReMark");
            tableMapping.ColumnMappings.Add("IsCanuse", "IsCanuse");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_UserMessage] WHERE (([ID] = @Original_ID) AND ([LoginName] = @Original_LoginName) AND ([LoginPassWord] = @Original_LoginPassWord) AND ([LoginPassWord2] = @Original_LoginPassWord2) AND ([RealName] = @Original_RealName) AND ([PhoneNumber] = @Original_PhoneNumber) AND ([Level] = @Original_Level) AND ((@IsNull_Address = 1 AND [Address] IS NULL) OR ([Address] = @Original_Address)) AND ((@IsNull_IsCanuse = 1 AND [IsCanuse] IS NULL) OR ([IsCanuse] = @Original_IsCanuse)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginPassWord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginPassWord2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Level", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsCanuse", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCanuse", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCanuse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCanuse", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_UserMessage] ([ID], [LoginName], [LoginPassWord], [LoginPassWord2], [RealName], [PhoneNumber], [Level], [Address], [ReMark], [IsCanuse]) VALUES (@ID, @LoginName, @LoginPassWord, @LoginPassWord2, @RealName, @PhoneNumber, @Level, @Address, @ReMark, @IsCanuse);
SELECT ID, LoginName, LoginPassWord, LoginPassWord2, RealName, PhoneNumber, Level, Address, ReMark, IsCanuse FROM Table_UserMessage WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginPassWord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginPassWord2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Level", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReMark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReMark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCanuse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCanuse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_UserMessage] SET [ID] = @ID, [LoginName] = @LoginName, [LoginPassWord] = @LoginPassWord, [LoginPassWord2] = @LoginPassWord2, [RealName] = @RealName, [PhoneNumber] = @PhoneNumber, [Level] = @Level, [Address] = @Address, [ReMark] = @ReMark, [IsCanuse] = @IsCanuse WHERE (([ID] = @Original_ID) AND ([LoginName] = @Original_LoginName) AND ([LoginPassWord] = @Original_LoginPassWord) AND ([LoginPassWord2] = @Original_LoginPassWord2) AND ([RealName] = @Original_RealName) AND ([PhoneNumber] = @Original_PhoneNumber) AND ([Level] = @Original_Level) AND ((@IsNull_Address = 1 AND [Address] IS NULL) OR ([Address] = @Original_Address)) AND ((@IsNull_IsCanuse = 1 AND [IsCanuse] IS NULL) OR ([IsCanuse] = @Original_IsCanuse)));
SELECT ID, LoginName, LoginPassWord, LoginPassWord2, RealName, PhoneNumber, Level, Address, ReMark, IsCanuse FROM Table_UserMessage WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginPassWord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginPassWord2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RealName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Level", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReMark", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReMark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCanuse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCanuse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginPassWord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoginPassWord2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoginPassWord2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RealName", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RealName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Level", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsCanuse", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCanuse", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCanuse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCanuse", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, LoginName, LoginPassWord, LoginPassWord2, RealName, PhoneNumber, [Leve" +
                "l], Address, ReMark, IsCanuse FROM dbo.Table_UserMessage";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_UserMessageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_UserMessageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_UserMessageDataTable dataTable = new DBCLDataSet.Table_UserMessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_UserMessageDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_UserMessage");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID, string Original_LoginName, string Original_LoginPassWord, string Original_LoginPassWord2, string Original_RealName, string Original_PhoneNumber, string Original_Level, string Original_Address, global::System.Nullable<bool> Original_IsCanuse) {
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID));
            }
            if ((Original_LoginName == null)) {
                throw new global::System.ArgumentNullException("Original_LoginName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_LoginName));
            }
            if ((Original_LoginPassWord == null)) {
                throw new global::System.ArgumentNullException("Original_LoginPassWord");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LoginPassWord));
            }
            if ((Original_LoginPassWord2 == null)) {
                throw new global::System.ArgumentNullException("Original_LoginPassWord2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_LoginPassWord2));
            }
            if ((Original_RealName == null)) {
                throw new global::System.ArgumentNullException("Original_RealName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_RealName));
            }
            if ((Original_PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PhoneNumber));
            }
            if ((Original_Level == null)) {
                throw new global::System.ArgumentNullException("Original_Level");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Level));
            }
            if ((Original_Address == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Address));
            }
            if ((Original_IsCanuse.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_IsCanuse.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID, string LoginName, string LoginPassWord, string LoginPassWord2, string RealName, string PhoneNumber, string Level, string Address, string ReMark, global::System.Nullable<bool> IsCanuse) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((LoginName == null)) {
                throw new global::System.ArgumentNullException("LoginName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LoginName));
            }
            if ((LoginPassWord == null)) {
                throw new global::System.ArgumentNullException("LoginPassWord");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LoginPassWord));
            }
            if ((LoginPassWord2 == null)) {
                throw new global::System.ArgumentNullException("LoginPassWord2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LoginPassWord2));
            }
            if ((RealName == null)) {
                throw new global::System.ArgumentNullException("RealName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RealName));
            }
            if ((PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("PhoneNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PhoneNumber));
            }
            if ((Level == null)) {
                throw new global::System.ArgumentNullException("Level");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Level));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Address));
            }
            if ((ReMark == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ReMark));
            }
            if ((IsCanuse.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(IsCanuse.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID, 
                    string LoginName, 
                    string LoginPassWord, 
                    string LoginPassWord2, 
                    string RealName, 
                    string PhoneNumber, 
                    string Level, 
                    string Address, 
                    string ReMark, 
                    global::System.Nullable<bool> IsCanuse, 
                    string Original_ID, 
                    string Original_LoginName, 
                    string Original_LoginPassWord, 
                    string Original_LoginPassWord2, 
                    string Original_RealName, 
                    string Original_PhoneNumber, 
                    string Original_Level, 
                    string Original_Address, 
                    global::System.Nullable<bool> Original_IsCanuse) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((LoginName == null)) {
                throw new global::System.ArgumentNullException("LoginName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LoginName));
            }
            if ((LoginPassWord == null)) {
                throw new global::System.ArgumentNullException("LoginPassWord");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LoginPassWord));
            }
            if ((LoginPassWord2 == null)) {
                throw new global::System.ArgumentNullException("LoginPassWord2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LoginPassWord2));
            }
            if ((RealName == null)) {
                throw new global::System.ArgumentNullException("RealName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(RealName));
            }
            if ((PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("PhoneNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PhoneNumber));
            }
            if ((Level == null)) {
                throw new global::System.ArgumentNullException("Level");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Level));
            }
            if ((Address == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Address));
            }
            if ((ReMark == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ReMark));
            }
            if ((IsCanuse.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(IsCanuse.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ID));
            }
            if ((Original_LoginName == null)) {
                throw new global::System.ArgumentNullException("Original_LoginName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_LoginName));
            }
            if ((Original_LoginPassWord == null)) {
                throw new global::System.ArgumentNullException("Original_LoginPassWord");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_LoginPassWord));
            }
            if ((Original_LoginPassWord2 == null)) {
                throw new global::System.ArgumentNullException("Original_LoginPassWord2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_LoginPassWord2));
            }
            if ((Original_RealName == null)) {
                throw new global::System.ArgumentNullException("Original_RealName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_RealName));
            }
            if ((Original_PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_PhoneNumber));
            }
            if ((Original_Level == null)) {
                throw new global::System.ArgumentNullException("Original_Level");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Level));
            }
            if ((Original_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Address));
            }
            if ((Original_IsCanuse.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_IsCanuse.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LoginName, 
                    string LoginPassWord, 
                    string LoginPassWord2, 
                    string RealName, 
                    string PhoneNumber, 
                    string Level, 
                    string Address, 
                    string ReMark, 
                    global::System.Nullable<bool> IsCanuse, 
                    string Original_ID, 
                    string Original_LoginName, 
                    string Original_LoginPassWord, 
                    string Original_LoginPassWord2, 
                    string Original_RealName, 
                    string Original_PhoneNumber, 
                    string Original_Level, 
                    string Original_Address, 
                    global::System.Nullable<bool> Original_IsCanuse) {
            return this.Update(Original_ID, LoginName, LoginPassWord, LoginPassWord2, RealName, PhoneNumber, Level, Address, ReMark, IsCanuse, Original_ID, Original_LoginName, Original_LoginPassWord, Original_LoginPassWord2, Original_RealName, Original_PhoneNumber, Original_Level, Original_Address, Original_IsCanuse);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_VIPMessageTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Table_VIPMessageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_VIPMessage";
            tableMapping.ColumnMappings.Add("VIPID", "VIPID");
            tableMapping.ColumnMappings.Add("VIPName", "VIPName");
            tableMapping.ColumnMappings.Add("VIPPhone", "VIPPhone");
            tableMapping.ColumnMappings.Add("VIPAddress", "VIPAddress");
            tableMapping.ColumnMappings.Add("VIPZhekou", "VIPZhekou");
            tableMapping.ColumnMappings.Add("Flage", "Flage");
            tableMapping.ColumnMappings.Add("VIPRemrk", "VIPRemrk");
            tableMapping.ColumnMappings.Add("VIPBirtheDay", "VIPBirtheDay");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_VIPMessage] WHERE (([VIPID] = @Original_VIPID) AND ([VIPName] = @Original_VIPName) AND ([VIPPhone] = @Original_VIPPhone) AND ([VIPAddress] = @Original_VIPAddress) AND ([VIPZhekou] = @Original_VIPZhekou) AND ([Flage] = @Original_Flage) AND ([VIPBirtheDay] = @Original_VIPBirtheDay))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPZhekou", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 1, "VIPZhekou", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPBirtheDay", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPBirtheDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_VIPMessage] ([VIPID], [VIPName], [VIPPhone], [VIPAddress], [VIPZhekou], [Flage], [VIPRemrk], [VIPBirtheDay]) VALUES (@VIPID, @VIPName, @VIPPhone, @VIPAddress, @VIPZhekou, @Flage, @VIPRemrk, @VIPBirtheDay);
SELECT VIPID, VIPName, VIPPhone, VIPAddress, VIPZhekou, Flage, VIPRemrk, VIPBirtheDay FROM Table_VIPMessage WHERE (VIPID = @VIPID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPZhekou", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 1, "VIPZhekou", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPRemrk", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPRemrk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPBirtheDay", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPBirtheDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_VIPMessage] SET [VIPID] = @VIPID, [VIPName] = @VIPName, [VIPPhone] = @VIPPhone, [VIPAddress] = @VIPAddress, [VIPZhekou] = @VIPZhekou, [Flage] = @Flage, [VIPRemrk] = @VIPRemrk, [VIPBirtheDay] = @VIPBirtheDay WHERE (([VIPID] = @Original_VIPID) AND ([VIPName] = @Original_VIPName) AND ([VIPPhone] = @Original_VIPPhone) AND ([VIPAddress] = @Original_VIPAddress) AND ([VIPZhekou] = @Original_VIPZhekou) AND ([Flage] = @Original_Flage) AND ([VIPBirtheDay] = @Original_VIPBirtheDay));
SELECT VIPID, VIPName, VIPPhone, VIPAddress, VIPZhekou, Flage, VIPRemrk, VIPBirtheDay FROM Table_VIPMessage WHERE (VIPID = @VIPID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPZhekou", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 1, "VIPZhekou", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPRemrk", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPRemrk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIPBirtheDay", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPBirtheDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPZhekou", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 1, "VIPZhekou", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VIPBirtheDay", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VIPBirtheDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DX男士服装进销存.Properties.Settings.Default.DX_男士服装进销存数据库ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT VIPID, VIPName, VIPPhone, VIPAddress, VIPZhekou, Flage, VIPRemrk, VIPBirth" +
                "eDay FROM dbo.Table_VIPMessage";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DBCLDataSet.Table_VIPMessageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DBCLDataSet.Table_VIPMessageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DBCLDataSet.Table_VIPMessageDataTable dataTable = new DBCLDataSet.Table_VIPMessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet.Table_VIPMessageDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DBCLDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_VIPMessage");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_VIPID, string Original_VIPName, string Original_VIPPhone, string Original_VIPAddress, decimal Original_VIPZhekou, bool Original_Flage, System.DateTime Original_VIPBirtheDay) {
            if ((Original_VIPID == null)) {
                throw new global::System.ArgumentNullException("Original_VIPID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_VIPID));
            }
            if ((Original_VIPName == null)) {
                throw new global::System.ArgumentNullException("Original_VIPName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_VIPName));
            }
            if ((Original_VIPPhone == null)) {
                throw new global::System.ArgumentNullException("Original_VIPPhone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_VIPPhone));
            }
            if ((Original_VIPAddress == null)) {
                throw new global::System.ArgumentNullException("Original_VIPAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_VIPAddress));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_VIPZhekou));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_Flage));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_VIPBirtheDay));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string VIPID, string VIPName, string VIPPhone, string VIPAddress, decimal VIPZhekou, bool Flage, string VIPRemrk, System.DateTime VIPBirtheDay) {
            if ((VIPID == null)) {
                throw new global::System.ArgumentNullException("VIPID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(VIPID));
            }
            if ((VIPName == null)) {
                throw new global::System.ArgumentNullException("VIPName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(VIPName));
            }
            if ((VIPPhone == null)) {
                throw new global::System.ArgumentNullException("VIPPhone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(VIPPhone));
            }
            if ((VIPAddress == null)) {
                throw new global::System.ArgumentNullException("VIPAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(VIPAddress));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(VIPZhekou));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(Flage));
            if ((VIPRemrk == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(VIPRemrk));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(VIPBirtheDay));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string VIPID, string VIPName, string VIPPhone, string VIPAddress, decimal VIPZhekou, bool Flage, string VIPRemrk, System.DateTime VIPBirtheDay, string Original_VIPID, string Original_VIPName, string Original_VIPPhone, string Original_VIPAddress, decimal Original_VIPZhekou, bool Original_Flage, System.DateTime Original_VIPBirtheDay) {
            if ((VIPID == null)) {
                throw new global::System.ArgumentNullException("VIPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(VIPID));
            }
            if ((VIPName == null)) {
                throw new global::System.ArgumentNullException("VIPName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(VIPName));
            }
            if ((VIPPhone == null)) {
                throw new global::System.ArgumentNullException("VIPPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(VIPPhone));
            }
            if ((VIPAddress == null)) {
                throw new global::System.ArgumentNullException("VIPAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(VIPAddress));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(VIPZhekou));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Flage));
            if ((VIPRemrk == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(VIPRemrk));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(VIPBirtheDay));
            if ((Original_VIPID == null)) {
                throw new global::System.ArgumentNullException("Original_VIPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_VIPID));
            }
            if ((Original_VIPName == null)) {
                throw new global::System.ArgumentNullException("Original_VIPName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_VIPName));
            }
            if ((Original_VIPPhone == null)) {
                throw new global::System.ArgumentNullException("Original_VIPPhone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_VIPPhone));
            }
            if ((Original_VIPAddress == null)) {
                throw new global::System.ArgumentNullException("Original_VIPAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_VIPAddress));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_VIPZhekou));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_Flage));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_VIPBirtheDay));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string VIPName, string VIPPhone, string VIPAddress, decimal VIPZhekou, bool Flage, string VIPRemrk, System.DateTime VIPBirtheDay, string Original_VIPID, string Original_VIPName, string Original_VIPPhone, string Original_VIPAddress, decimal Original_VIPZhekou, bool Original_Flage, System.DateTime Original_VIPBirtheDay) {
            return this.Update(Original_VIPID, VIPName, VIPPhone, VIPAddress, VIPZhekou, Flage, VIPRemrk, VIPBirtheDay, Original_VIPID, Original_VIPName, Original_VIPPhone, Original_VIPAddress, Original_VIPZhekou, Original_Flage, Original_VIPBirtheDay);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Table_GoodsBackTableAdapter _table_GoodsBackTableAdapter;
        
        private Table_GoodsInTableAdapter _table_GoodsInTableAdapter;
        
        private Table_GoodsSellTableAdapter _table_GoodsSellTableAdapter;
        
        private Table_StorTableAdapter _table_StorTableAdapter;
        
        private Table_SupplierTableAdapter _table_SupplierTableAdapter;
        
        private Table_UserMessageTableAdapter _table_UserMessageTableAdapter;
        
        private Table_VIPMessageTableAdapter _table_VIPMessageTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_GoodsBackTableAdapter Table_GoodsBackTableAdapter {
            get {
                return this._table_GoodsBackTableAdapter;
            }
            set {
                this._table_GoodsBackTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_GoodsInTableAdapter Table_GoodsInTableAdapter {
            get {
                return this._table_GoodsInTableAdapter;
            }
            set {
                this._table_GoodsInTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_GoodsSellTableAdapter Table_GoodsSellTableAdapter {
            get {
                return this._table_GoodsSellTableAdapter;
            }
            set {
                this._table_GoodsSellTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_StorTableAdapter Table_StorTableAdapter {
            get {
                return this._table_StorTableAdapter;
            }
            set {
                this._table_StorTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_SupplierTableAdapter Table_SupplierTableAdapter {
            get {
                return this._table_SupplierTableAdapter;
            }
            set {
                this._table_SupplierTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_UserMessageTableAdapter Table_UserMessageTableAdapter {
            get {
                return this._table_UserMessageTableAdapter;
            }
            set {
                this._table_UserMessageTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_VIPMessageTableAdapter Table_VIPMessageTableAdapter {
            get {
                return this._table_VIPMessageTableAdapter;
            }
            set {
                this._table_VIPMessageTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._table_GoodsBackTableAdapter != null) 
                            && (this._table_GoodsBackTableAdapter.Connection != null))) {
                    return this._table_GoodsBackTableAdapter.Connection;
                }
                if (((this._table_GoodsInTableAdapter != null) 
                            && (this._table_GoodsInTableAdapter.Connection != null))) {
                    return this._table_GoodsInTableAdapter.Connection;
                }
                if (((this._table_GoodsSellTableAdapter != null) 
                            && (this._table_GoodsSellTableAdapter.Connection != null))) {
                    return this._table_GoodsSellTableAdapter.Connection;
                }
                if (((this._table_StorTableAdapter != null) 
                            && (this._table_StorTableAdapter.Connection != null))) {
                    return this._table_StorTableAdapter.Connection;
                }
                if (((this._table_SupplierTableAdapter != null) 
                            && (this._table_SupplierTableAdapter.Connection != null))) {
                    return this._table_SupplierTableAdapter.Connection;
                }
                if (((this._table_UserMessageTableAdapter != null) 
                            && (this._table_UserMessageTableAdapter.Connection != null))) {
                    return this._table_UserMessageTableAdapter.Connection;
                }
                if (((this._table_VIPMessageTableAdapter != null) 
                            && (this._table_VIPMessageTableAdapter.Connection != null))) {
                    return this._table_VIPMessageTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._table_GoodsBackTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_GoodsInTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_GoodsSellTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_StorTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_SupplierTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_UserMessageTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_VIPMessageTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DBCLDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._table_UserMessageTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_UserMessage.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_UserMessageTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_GoodsBackTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_GoodsBack.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_GoodsBackTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_GoodsInTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_GoodsIn.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_GoodsInTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_GoodsSellTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_GoodsSell.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_GoodsSellTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_StorTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_Stor.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_StorTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_SupplierTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_Supplier.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_SupplierTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_VIPMessageTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_VIPMessage.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_VIPMessageTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DBCLDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._table_UserMessageTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_UserMessage.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_UserMessageTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_GoodsBackTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_GoodsBack.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_GoodsBackTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_GoodsInTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_GoodsIn.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_GoodsInTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_GoodsSellTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_GoodsSell.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_GoodsSellTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_StorTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_Stor.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_StorTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_SupplierTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_Supplier.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_SupplierTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_VIPMessageTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_VIPMessage.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_VIPMessageTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DBCLDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._table_VIPMessageTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_VIPMessage.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_VIPMessageTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_SupplierTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_Supplier.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_SupplierTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_StorTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_Stor.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_StorTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_GoodsSellTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_GoodsSell.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_GoodsSellTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_GoodsInTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_GoodsIn.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_GoodsInTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_GoodsBackTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_GoodsBack.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_GoodsBackTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_UserMessageTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_UserMessage.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_UserMessageTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DBCLDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._table_GoodsBackTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_GoodsBackTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._table_GoodsInTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_GoodsInTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._table_GoodsSellTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_GoodsSellTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._table_StorTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_StorTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._table_SupplierTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_SupplierTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._table_UserMessageTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_UserMessageTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._table_VIPMessageTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_VIPMessageTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._table_GoodsBackTableAdapter != null)) {
                    revertConnections.Add(this._table_GoodsBackTableAdapter, this._table_GoodsBackTableAdapter.Connection);
                    this._table_GoodsBackTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_GoodsBackTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_GoodsBackTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_GoodsBackTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_GoodsBackTableAdapter.Adapter);
                    }
                }
                if ((this._table_GoodsInTableAdapter != null)) {
                    revertConnections.Add(this._table_GoodsInTableAdapter, this._table_GoodsInTableAdapter.Connection);
                    this._table_GoodsInTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_GoodsInTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_GoodsInTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_GoodsInTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_GoodsInTableAdapter.Adapter);
                    }
                }
                if ((this._table_GoodsSellTableAdapter != null)) {
                    revertConnections.Add(this._table_GoodsSellTableAdapter, this._table_GoodsSellTableAdapter.Connection);
                    this._table_GoodsSellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_GoodsSellTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_GoodsSellTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_GoodsSellTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_GoodsSellTableAdapter.Adapter);
                    }
                }
                if ((this._table_StorTableAdapter != null)) {
                    revertConnections.Add(this._table_StorTableAdapter, this._table_StorTableAdapter.Connection);
                    this._table_StorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_StorTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_StorTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_StorTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_StorTableAdapter.Adapter);
                    }
                }
                if ((this._table_SupplierTableAdapter != null)) {
                    revertConnections.Add(this._table_SupplierTableAdapter, this._table_SupplierTableAdapter.Connection);
                    this._table_SupplierTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_SupplierTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_SupplierTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_SupplierTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_SupplierTableAdapter.Adapter);
                    }
                }
                if ((this._table_UserMessageTableAdapter != null)) {
                    revertConnections.Add(this._table_UserMessageTableAdapter, this._table_UserMessageTableAdapter.Connection);
                    this._table_UserMessageTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_UserMessageTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_UserMessageTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_UserMessageTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_UserMessageTableAdapter.Adapter);
                    }
                }
                if ((this._table_VIPMessageTableAdapter != null)) {
                    revertConnections.Add(this._table_VIPMessageTableAdapter, this._table_VIPMessageTableAdapter.Connection);
                    this._table_VIPMessageTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_VIPMessageTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_VIPMessageTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_VIPMessageTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_VIPMessageTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._table_GoodsBackTableAdapter != null)) {
                    this._table_GoodsBackTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_GoodsBackTableAdapter]));
                    this._table_GoodsBackTableAdapter.Transaction = null;
                }
                if ((this._table_GoodsInTableAdapter != null)) {
                    this._table_GoodsInTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_GoodsInTableAdapter]));
                    this._table_GoodsInTableAdapter.Transaction = null;
                }
                if ((this._table_GoodsSellTableAdapter != null)) {
                    this._table_GoodsSellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_GoodsSellTableAdapter]));
                    this._table_GoodsSellTableAdapter.Transaction = null;
                }
                if ((this._table_StorTableAdapter != null)) {
                    this._table_StorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_StorTableAdapter]));
                    this._table_StorTableAdapter.Transaction = null;
                }
                if ((this._table_SupplierTableAdapter != null)) {
                    this._table_SupplierTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_SupplierTableAdapter]));
                    this._table_SupplierTableAdapter.Transaction = null;
                }
                if ((this._table_UserMessageTableAdapter != null)) {
                    this._table_UserMessageTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_UserMessageTableAdapter]));
                    this._table_UserMessageTableAdapter.Transaction = null;
                }
                if ((this._table_VIPMessageTableAdapter != null)) {
                    this._table_VIPMessageTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_VIPMessageTableAdapter]));
                    this._table_VIPMessageTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591